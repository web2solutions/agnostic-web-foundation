{
  "stats": {
    "suites": 3,
    "tests": 18,
    "passes": 18,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-16T21:08:17.442Z",
    "end": "2021-03-16T21:08:18.460Z",
    "duration": 1018,
    "testsRegistered": 18,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "101fee94-cee0-437a-8c3d-b51b70a45aed",
      "title": "",
      "fullFile": "cypress/integration/LocalDatabaseTransport_spec.js",
      "file": "cypress/integration/LocalDatabaseTransport_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a60b6c5c-2ff2-45e6-b85a-1774c4053107",
          "title": "#--- LocalDatabaseTransport Class Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8ee71c90-0bdb-4322-8d12-f5ffc2864759",
              "title": "Check class integrity",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "LocalDatabaseTransport must have a constructor",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check class integrity LocalDatabaseTransport must have a constructor",
                  "timedOut": null,
                  "duration": 49,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(LocalDatabaseTransport.constructor, Function);\ndone();",
                  "err": {},
                  "uuid": "3957b706-2047-4cae-ac0b-b8f5b5c8fbfa",
                  "parentUUID": "8ee71c90-0bdb-4322-8d12-f5ffc2864759",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "localDataTransport must be instance of LocalDatabaseTransport",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check class integrity localDataTransport must be instance of LocalDatabaseTransport",
                  "timedOut": null,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(localDataTransport instanceof LocalDatabaseTransport, true);\ndone();",
                  "err": {},
                  "uuid": "49634988-64df-4b97-b044-21aad65a48b9",
                  "parentUUID": "8ee71c90-0bdb-4322-8d12-f5ffc2864759",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3957b706-2047-4cae-ac0b-b8f5b5c8fbfa",
                "49634988-64df-4b97-b044-21aad65a48b9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 62,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a3dc5a26-397b-4218-8673-32b590717c45",
              "title": "Check Internal Data API",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Connection shall to be ok",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Connection shall to be ok",
                  "timedOut": null,
                  "duration": 102,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee3() {\n  var _yield$localDataTrans, error, data;\n  return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return localDataTransport.connect();\n        case 2:\n          _yield$localDataTrans = _context3.sent;\n          error = _yield$localDataTrans.error;\n          data = _yield$localDataTrans.data;\n          _assert[\"default\"].equal(error, null);\n          _assert[\"default\"].equal(data instanceof LocalDatabaseTransport, true);\n          done();\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3);\n}))();",
                  "err": {},
                  "uuid": "51135baa-2a85-45b7-b2ba-bb468d013714",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Double connection shall to raise an error",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Double connection shall to raise an error",
                  "timedOut": null,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee4() {\n  var _yield$localDataTrans2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return localDataTransport.connect();\n        case 2:\n          _yield$localDataTrans2 = _context4.sent;\n          error = _yield$localDataTrans2.error;\n          data = _yield$localDataTrans2.data;\n          _assert[\"default\"].equal(error !== null, true);\n          _assert[\"default\"].equal(data, null);\n          done();\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4);\n}))();",
                  "err": {},
                  "uuid": "c423d0d0-055a-4c85-96e4-e528d1354c52",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to connect to another database",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API We must be able to connect to another database",
                  "timedOut": null,
                  "duration": 64,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee5() {\n  var _yield$localDataTrans3, error, data;\n  return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          localDataTransport_1 = new LocalDatabaseTransport({\n            version: 3,\n            tables: {},\n            dbName: 'MyTestDatabase_1'\n          });\n          localDataTransport_1.addSchema('Product', ProductSchema);\n          localDataTransport_1.addSchema('User', UserSchema);\n          _context5.next = 5;\n          return localDataTransport_1.connect();\n        case 5:\n          _yield$localDataTrans3 = _context5.sent;\n          error = _yield$localDataTrans3.error;\n          data = _yield$localDataTrans3.data;\n          _assert[\"default\"].equal(error, null);\n          done();\n        case 10:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _callee5);\n}))();",
                  "err": {},
                  "uuid": "231f50a9-34cd-4272-b74d-51a03c26f6a2",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We cannot to add new Data Schemas to schemas tree after connection",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API We cannot to add new Data Schemas to schemas tree after connection",
                  "timedOut": null,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "if (error) {\n  return done(error);\n}\nvar error = {};\ntry {\n  var UserFakeSchema = new Schema({\n    name: {\n      type: String,\n      required: true\n    },\n    username: {\n      type: String,\n      required: true\n    }\n  });\n  localDataTransport.addSchema('UserFake', UserFakeSchema);\n  localDataTransport.table('UserFake');\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error.message, 'Table UserFake does not exist');\ndone();",
                  "err": {},
                  "uuid": "8eafa38e-bdd1-44f0-b698-a9c76a273135",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Internal Data API - We must be able to add user #1 to local database",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Internal Data API - We must be able to add user #1 to local database",
                  "timedOut": null,
                  "duration": 46,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee6() {\n  var __id, e;\n  return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          __id = null;\n          e = null;\n          _context6.prev = 2;\n          _context6.next = 5;\n          return localDataTransport.table('User').add(userDoc1);\n        case 5:\n          __id = _context6.sent;\n          userAddedId1 = __id;\n          _context6.next = 13;\n          break;\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](2);\n          console.error(_context6.t0);\n          e = _context6.t0;\n        case 13:\n          _assert[\"default\"].equal(__id === 1, true);\n          _assert[\"default\"].equal(e === null, true);\n          done();\n        case 16:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6, null, [[2, 9]]);\n}))();",
                  "err": {},
                  "uuid": "9d90b2dd-3a35-4957-8824-96b8c98b8651",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Internal Data API - We must be able to add user #2 to local database",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Internal Data API - We must be able to add user #2 to local database",
                  "timedOut": null,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee7() {\n  var __id, e;\n  return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          __id = null;\n          e = null;\n          _context7.prev = 2;\n          _context7.next = 5;\n          return localDataTransport.table('User').add(userDoc2);\n        case 5:\n          __id = _context7.sent;\n          userAddedId2 = __id;\n          _context7.next = 13;\n          break;\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](2);\n          console.error(_context7.t0);\n          e = _context7.t0;\n        case 13:\n          _assert[\"default\"].equal(__id === 2, true);\n          _assert[\"default\"].equal(e === null, true);\n          done();\n        case 16:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _callee7, null, [[2, 9]]);\n}))();",
                  "err": {},
                  "uuid": "c853c02a-7f73-4aba-88fc-561723a6ab67",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Internal Data API - We must be able to edit the added user on local database",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Internal Data API - We must be able to edit the added user on local database",
                  "timedOut": null,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee8() {\n  var __id, e;\n  return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          __id = null;\n          e = null;\n          _context8.prev = 2;\n          userDoc1.name = 'Orion';\n          _context8.next = 6;\n          return localDataTransport.table('User').put(_objectSpread({\n            __id: userAddedId1\n          }, userDoc1));\n        case 6:\n          __id = _context8.sent;\n          _context8.next = 12;\n          break;\n        case 9:\n          _context8.prev = 9;\n          _context8.t0 = _context8[\"catch\"](2);\n          e = _context8.t0;\n        case 12:\n          _assert[\"default\"].equal(__id === 1, true);\n          _assert[\"default\"].equal(e === null, true);\n          done();\n        case 15:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _callee8, null, [[2, 9]]);\n}))();",
                  "err": {},
                  "uuid": "ffd7bf5d-dc35-4a1a-99ed-6dc76ec58a61",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Internal Data API - We must be able to find the added user by it ID",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Internal Data API - We must be able to find the added user by it ID",
                  "timedOut": null,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee9() {\n  var doc, e;\n  return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          doc = null;\n          e = null;\n          _context9.prev = 2;\n          userDoc1.name = 'Orion';\n          _context9.next = 6;\n          return localDataTransport.table('User').get(userAddedId1);\n        case 6:\n          doc = _context9.sent;\n          _context9.next = 12;\n          break;\n        case 9:\n          _context9.prev = 9;\n          _context9.t0 = _context9[\"catch\"](2);\n          e = _context9.t0;\n        case 12:\n          _assert[\"default\"].equal((0, _typeof2[\"default\"])(doc) === 'object', true);\n          _assert[\"default\"].equal(doc.name, 'Orion');\n          _assert[\"default\"].equal(e === null, true);\n          done();\n        case 16:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _callee9, null, [[2, 9]]);\n}))();",
                  "err": {},
                  "uuid": "f8a2e606-8287-4319-96ee-9ba2bedda801",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Internal Data API - We must be able to find the added user by it name",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Internal Data API - We must be able to find the added user by it name",
                  "timedOut": null,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee10() {\n  var doc, e;\n  return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          doc = null;\n          e = null;\n          _context10.prev = 2;\n          _context10.next = 5;\n          return localDataTransport.table('User').where({\n            name: userDoc1.name\n          }).first();\n        case 5:\n          doc = _context10.sent;\n          _context10.next = 11;\n          break;\n        case 8:\n          _context10.prev = 8;\n          _context10.t0 = _context10[\"catch\"](2);\n          e = _context10.t0;\n        case 11:\n          _assert[\"default\"].equal((0, _typeof2[\"default\"])(doc) === 'object', true);\n          _assert[\"default\"].equal(doc.name, 'Orion');\n          _assert[\"default\"].equal(e === null, true);\n          done();\n        case 15:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _callee10, null, [[2, 8]]);\n}))();",
                  "err": {},
                  "uuid": "9de3aeab-b702-47ef-b250-0b133d310ccc",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Internal Data API - We must not be able to find the added user by it username because it is not indexed",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Internal Data API - We must not be able to find the added user by it username because it is not indexed",
                  "timedOut": null,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee11() {\n  var doc, e;\n  return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          doc = null;\n          e = null;\n          _context11.prev = 2;\n          _context11.next = 5;\n          return localDataTransport.table('User').where({\n            username: userDoc1.username\n          }).first();\n        case 5:\n          doc = _context11.sent;\n          _context11.next = 11;\n          break;\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](2);\n          e = _context11.t0;\n        case 11:\n          _assert[\"default\"].equal(doc, null);\n          _assert[\"default\"].equal(e.message, 'KeyPath username on object store User is not indexed');\n          done();\n        case 14:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _callee11, null, [[2, 8]]);\n}))();",
                  "err": {},
                  "uuid": "22be1bc5-abc4-45c0-9762-0713551699b2",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Internal Data API - We must be able to find the added user by it name under reverse order",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Internal Data API - We must be able to find the added user by it name under reverse order",
                  "timedOut": null,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee12() {\n  var docs, e;\n  return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          docs = null;\n          e = null;\n          _context12.prev = 2;\n          _context12.next = 5;\n          return localDataTransport.table('User').toCollection().reverse().toArray();\n        case 5:\n          docs = _context12.sent;\n          _context12.next = 11;\n          break;\n        case 8:\n          _context12.prev = 8;\n          _context12.t0 = _context12[\"catch\"](2);\n          e = _context12.t0;\n        case 11:\n          _assert[\"default\"].equal(docs[1].name, userDoc1.name);\n          _assert[\"default\"].equal(e, null);\n          done();\n        case 14:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _callee12, null, [[2, 8]]);\n}))();",
                  "err": {},
                  "uuid": "9a00d8de-e8d2-4b56-b500-982bff839321",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Internal Data API - We must be able to delete the added user #1 from local database",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Internal Data API - We must be able to delete the added user #1 from local database",
                  "timedOut": null,
                  "duration": 44,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee13() {\n  var docs, doc, e;\n  return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          docs = null;\n          doc = null;\n          e = null;\n          _context13.prev = 3;\n          _context13.next = 6;\n          return localDataTransport.table('User')[\"delete\"](userAddedId1);\n        case 6:\n          docs = _context13.sent;\n          _context13.next = 9;\n          return localDataTransport.table('User').get(userAddedId1);\n        case 9:\n          doc = _context13.sent;\n          _context13.next = 15;\n          break;\n        case 12:\n          _context13.prev = 12;\n          _context13.t0 = _context13[\"catch\"](3);\n          e = _context13.t0;\n        case 15:\n          _assert[\"default\"].equal((0, _typeof2[\"default\"])(docs), 'undefined');\n          _assert[\"default\"].equal((0, _typeof2[\"default\"])(doc), 'undefined');\n          _assert[\"default\"].equal(e, null);\n          done();\n        case 19:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _callee13, null, [[3, 12]]);\n}))();",
                  "err": {},
                  "uuid": "d00ef935-1313-4176-9f6b-b76bcecc0000",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Internal Data API - We must be able to delete the added user #2 from local database",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Internal Data API - We must be able to delete the added user #2 from local database",
                  "timedOut": null,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee14() {\n  var docs, doc, e;\n  return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          docs = null;\n          doc = null;\n          e = null;\n          _context14.prev = 3;\n          _context14.next = 6;\n          return localDataTransport.table('User')[\"delete\"](userAddedId2);\n        case 6:\n          docs = _context14.sent;\n          _context14.next = 9;\n          return localDataTransport.table('User').get(userAddedId2);\n        case 9:\n          doc = _context14.sent;\n          _context14.next = 15;\n          break;\n        case 12:\n          _context14.prev = 12;\n          _context14.t0 = _context14[\"catch\"](3);\n          e = _context14.t0;\n        case 15:\n          _assert[\"default\"].equal((0, _typeof2[\"default\"])(docs), 'undefined');\n          _assert[\"default\"].equal((0, _typeof2[\"default\"])(doc), 'undefined');\n          _assert[\"default\"].equal(e, null);\n          done();\n        case 19:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _callee14, null, [[3, 12]]);\n}))();",
                  "err": {},
                  "uuid": "6fd9facc-b2ff-4e1a-b085-60ea2dafb9c1",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Internal Data API - We must be able to bulk add users to local database",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Internal Data API - We must be able to bulk add users to local database",
                  "timedOut": null,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee15() {\n  var __ids, e;\n  return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          __ids = null;\n          e = null;\n          _context15.prev = 2;\n          _context15.next = 5;\n          return localDataTransport.table('User').bulkAdd([userDoc1, userDoc2], false, {\n            allKeys: true\n          });\n        case 5:\n          __ids = _context15.sent;\n          bulkInsertedIds = __ids;\n          _context15.next = 12;\n          break;\n        case 9:\n          _context15.prev = 9;\n          _context15.t0 = _context15[\"catch\"](2);\n          e = _context15.t0;\n        case 12:\n          _assert[\"default\"].equal(__ids[0], 1);\n          _assert[\"default\"].equal(__ids[1], 2);\n          _assert[\"default\"].equal(e === null, true);\n          done();\n        case 16:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _callee15, null, [[2, 9]]);\n}))();",
                  "err": {},
                  "uuid": "c53ec97a-312f-4697-bd95-fd501d13cb91",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Internal Data API - We must be able to bulk edit users in local database",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Internal Data API - We must be able to bulk edit users in local database",
                  "timedOut": null,
                  "duration": 35,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee16() {\n  var __ids, e, doc1, doc2;\n  return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          __ids = null;\n          e = null;\n          doc1 = null;\n          doc2 = null;\n          userDoc1.name = 'Nebulosa';\n          userDoc2.name = 'Betelgeuse';\n          _context16.prev = 6;\n          _context16.next = 9;\n          return localDataTransport.table('User').bulkPut([userDoc1, userDoc2], false, {\n            allKeys: true\n          });\n        case 9:\n          __ids = _context16.sent;\n          _context16.next = 12;\n          return localDataTransport.table('User').get(__ids[0]);\n        case 12:\n          doc1 = _context16.sent;\n          _context16.next = 15;\n          return localDataTransport.table('User').get(__ids[1]);\n        case 15:\n          doc2 = _context16.sent;\n          _context16.next = 21;\n          break;\n        case 18:\n          _context16.prev = 18;\n          _context16.t0 = _context16[\"catch\"](6);\n          e = _context16.t0;\n        case 21:\n          _assert[\"default\"].equal(__ids[0], 1);\n          _assert[\"default\"].equal(__ids[1], 2);\n          _assert[\"default\"].equal(doc1.name, userDoc1.name);\n          _assert[\"default\"].equal(doc2.name, userDoc2.name);\n          _assert[\"default\"].equal(e === null, true);\n          done();\n        case 27:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _callee16, null, [[6, 18]]);\n}))();",
                  "err": {},
                  "uuid": "d4c99461-d8ab-4de0-b17b-925d0724d3ed",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Internal Data API - We must be able to bulk delete users from local database",
                  "fullTitle": "#--- LocalDatabaseTransport Class Test Suite Check Internal Data API Internal Data API - We must be able to bulk delete users from local database",
                  "timedOut": null,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee17() {\n  var __ids, e, doc1, doc2;\n  return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          __ids = null;\n          e = null;\n          doc1 = null;\n          doc2 = null;\n          _context17.prev = 4;\n          _context17.next = 7;\n          return localDataTransport.table('User').bulkDelete((0, _toConsumableArray2[\"default\"])(bulkInsertedIds));\n        case 7:\n          __ids = _context17.sent;\n          _context17.next = 10;\n          return localDataTransport.table('User').get(bulkInsertedIds[0]);\n        case 10:\n          doc1 = _context17.sent;\n          _context17.next = 13;\n          return localDataTransport.table('User').get(bulkInsertedIds[1]);\n        case 13:\n          doc2 = _context17.sent;\n          _context17.next = 19;\n          break;\n        case 16:\n          _context17.prev = 16;\n          _context17.t0 = _context17[\"catch\"](4);\n          e = _context17.t0;\n        case 19:\n          _assert[\"default\"].equal((0, _typeof2[\"default\"])(__ids), 'undefined');\n          _assert[\"default\"].equal((0, _typeof2[\"default\"])(doc1), 'undefined');\n          _assert[\"default\"].equal((0, _typeof2[\"default\"])(doc2), 'undefined');\n          _assert[\"default\"].equal(e === null, true);\n          done();\n        case 24:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _callee17, null, [[4, 16]]);\n}))();",
                  "err": {},
                  "uuid": "d004426d-ee01-454e-96c3-385b50861899",
                  "parentUUID": "a3dc5a26-397b-4218-8673-32b590717c45",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "51135baa-2a85-45b7-b2ba-bb468d013714",
                "c423d0d0-055a-4c85-96e4-e528d1354c52",
                "231f50a9-34cd-4272-b74d-51a03c26f6a2",
                "8eafa38e-bdd1-44f0-b698-a9c76a273135",
                "9d90b2dd-3a35-4957-8824-96b8c98b8651",
                "c853c02a-7f73-4aba-88fc-561723a6ab67",
                "ffd7bf5d-dc35-4a1a-99ed-6dc76ec58a61",
                "f8a2e606-8287-4319-96ee-9ba2bedda801",
                "9de3aeab-b702-47ef-b250-0b133d310ccc",
                "22be1bc5-abc4-45c0-9762-0713551699b2",
                "9a00d8de-e8d2-4b56-b500-982bff839321",
                "d00ef935-1313-4176-9f6b-b76bcecc0000",
                "6fd9facc-b2ff-4e1a-b085-60ea2dafb9c1",
                "c53ec97a-312f-4697-bd95-fd501d13cb91",
                "d4c99461-d8ab-4de0-b17b-925d0724d3ed",
                "d004426d-ee01-454e-96c3-385b50861899"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 552,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "docs/reports/unit-testing",
        "overwrite": false,
        "reportTitle": "My Custom Title",
        "showPassed": true,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}