{
  "stats": {
    "suites": 7,
    "tests": 19,
    "passes": 19,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-16T21:08:32.853Z",
    "end": "2021-03-16T21:08:33.406Z",
    "duration": 553,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0afdb9df-e850-431a-abea-e8bf69442dcf",
      "title": "",
      "fullFile": "cypress/integration/utils_spec.js",
      "file": "cypress/integration/utils_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "29e61d5f-92c8-4a39-a0e6-2590d7282805",
          "title": "#--- Utils module Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4466c67f-9b1d-466d-be7c-08b4a95f97c2",
              "title": "Method Signatures: utils.createMethodSignature(error: string|object, data: string|object|array|boolean) -> Create default signature method object",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "method signatures should have at least 2 data properties",
                  "fullTitle": "#--- Utils module Test Suite Method Signatures: utils.createMethodSignature(error: string|object, data: string|object|array|boolean) -> Create default signature method object method signatures should have at least 2 data properties",
                  "timedOut": null,
                  "duration": 34,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _error = 'fake error';\nvar _data = 'fake data';\nvar signature = utils.createMethodSignature(_error, _data);\n_assert[\"default\"].equal(Object.keys(signature).length, 2);\ndone();",
                  "err": {},
                  "uuid": "fdfdcf65-3a42-4bcd-b58c-35d366ab9b98",
                  "parentUUID": "4466c67f-9b1d-466d-be7c-08b4a95f97c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "method signatures should have error and data properties",
                  "fullTitle": "#--- Utils module Test Suite Method Signatures: utils.createMethodSignature(error: string|object, data: string|object|array|boolean) -> Create default signature method object method signatures should have error and data properties",
                  "timedOut": null,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _error = 'fake error';\nvar _data = 'fake data';\nvar signature = utils.createMethodSignature(_error, _data);\n_assert[\"default\"].equal(signature.data, _data);\n_assert[\"default\"].equal(signature.error, _error);\ndone();",
                  "err": {},
                  "uuid": "54926ce7-e01e-42e2-8e0f-92807e7b1dda",
                  "parentUUID": "4466c67f-9b1d-466d-be7c-08b4a95f97c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "method signatures should have error and data properties even if you dont pass any parameter",
                  "fullTitle": "#--- Utils module Test Suite Method Signatures: utils.createMethodSignature(error: string|object, data: string|object|array|boolean) -> Create default signature method object method signatures should have error and data properties even if you dont pass any parameter",
                  "timedOut": null,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var signature = utils.createMethodSignature();\n_assert[\"default\"].equal(signature.data, null);\n_assert[\"default\"].equal(signature.error, null);\ndone();",
                  "err": {},
                  "uuid": "7883cb56-62f1-42af-91ad-e3bb4cc6ca3b",
                  "parentUUID": "4466c67f-9b1d-466d-be7c-08b4a95f97c2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fdfdcf65-3a42-4bcd-b58c-35d366ab9b98",
                "54926ce7-e01e-42e2-8e0f-92807e7b1dda",
                "7883cb56-62f1-42af-91ad-e3bb4cc6ca3b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 61,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d1893253-29c7-48a0-93a1-aaceb659700f",
              "title": "UUID: utils.uuid() -> Generate an Universally unique identifier string",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "uuid() must have 36 length",
                  "fullTitle": "#--- Utils module Test Suite UUID: utils.uuid() -> Generate an Universally unique identifier string uuid() must have 36 length",
                  "timedOut": null,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var uuid1 = utils.uuid();\nvar uuid2 = utils.uuid();\n_assert[\"default\"].equal(uuid1.length, 36);\n_assert[\"default\"].equal(uuid2.length, 36);\ndone();",
                  "err": {},
                  "uuid": "fca0251a-994e-4542-8116-caa17f38118c",
                  "parentUUID": "d1893253-29c7-48a0-93a1-aaceb659700f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uuid() getter must return a 36 bytes string",
                  "fullTitle": "#--- Utils module Test Suite UUID: utils.uuid() -> Generate an Universally unique identifier string uuid() getter must return a 36 bytes string",
                  "timedOut": null,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var uuid1 = utils.uuid();\nvar bytes = new Blob([uuid1]).size;\n_assert[\"default\"].equal(bytes, 36);\ndone();",
                  "err": {},
                  "uuid": "cc0c9174-fb3f-4c35-898a-037f3064bcb0",
                  "parentUUID": "d1893253-29c7-48a0-93a1-aaceb659700f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Generates 10,000 uuids and check collisions",
                  "fullTitle": "#--- Utils module Test Suite UUID: utils.uuid() -> Generate an Universally unique identifier string Generates 10,000 uuids and check collisions",
                  "timedOut": null,
                  "duration": 55,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [];\nfor (var x = 0; x <= 10000; x++) {\n  var uuid = utils.uuid();\n  arr.push(uuid);\n}\nvar map = arr.reduce(function (acc, e) {\n  return acc.set(e, (acc.get(e) || 0) + 1);\n}, new Map());\nvar oneOcurrency = 1;\nvar similars = (0, _toConsumableArray2[\"default\"])(map.values()).filter(function (value) {\n  return value > oneOcurrency;\n}).length;\n_assert[\"default\"].equal(similars, 0);\ndone();",
                  "err": {},
                  "uuid": "b6924e06-a605-4b17-89c8-628eb311c92d",
                  "parentUUID": "d1893253-29c7-48a0-93a1-aaceb659700f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fca0251a-994e-4542-8116-caa17f38118c",
                "cc0c9174-fb3f-4c35-898a-037f3064bcb0",
                "b6924e06-a605-4b17-89c8-628eb311c92d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 84,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2c4aa131-7541-45c7-8dbd-c64691338162",
              "title": "toJSON: utils.toJSON(string|object) -> stringify and parse an object",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "toJSON() must support Strings",
                  "fullTitle": "#--- Utils module Test Suite toJSON: utils.toJSON(string|object) -> stringify and parse an object toJSON() must support Strings",
                  "timedOut": null,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var obj = '{ \"name\": \"eduardo\" }';\nvar json = utils.toJSON(obj);\n_assert[\"default\"].equal(json.name, 'eduardo');\ndone();",
                  "err": {},
                  "uuid": "41f7021f-c77c-44c0-9ab6-62f0b0f06f07",
                  "parentUUID": "2c4aa131-7541-45c7-8dbd-c64691338162",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "toJSON() Strings must be valid JSON string",
                  "fullTitle": "#--- Utils module Test Suite toJSON: utils.toJSON(string|object) -> stringify and parse an object toJSON() Strings must be valid JSON string",
                  "timedOut": null,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var obj = '{ name: \"eduardo\" }';\nvar json = {};\ntry {\n  json = utils.toJSON(obj);\n} catch (error) {\n  json = {};\n}\n_assert[\"default\"].notEqual(json.name, 'eduardo');\ndone();",
                  "err": {},
                  "uuid": "1b3a6c81-3080-44f3-b0e1-1823efc3e515",
                  "parentUUID": "2c4aa131-7541-45c7-8dbd-c64691338162",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "toJSON() must support Object",
                  "fullTitle": "#--- Utils module Test Suite toJSON: utils.toJSON(string|object) -> stringify and parse an object toJSON() must support Object",
                  "timedOut": null,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var obj = {\n  name: 'eduardo'\n};\nvar json = utils.toJSON(obj);\n_assert[\"default\"].equal(json.name, 'eduardo');\ndone();",
                  "err": {},
                  "uuid": "1655a251-2d31-4fb3-a7a9-44d8dd71dc3f",
                  "parentUUID": "2c4aa131-7541-45c7-8dbd-c64691338162",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "41f7021f-c77c-44c0-9ab6-62f0b0f06f07",
                "1b3a6c81-3080-44f3-b0e1-1823efc3e515",
                "1655a251-2d31-4fb3-a7a9-44d8dd71dc3f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 36,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "10416af4-0c44-485f-851f-cb2b04076357",
              "title": "genDbName: utils.genDbName(string) -> genDbName",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "genDbName() must return a string",
                  "fullTitle": "#--- Utils module Test Suite genDbName: utils.genDbName(string) -> genDbName genDbName() must return a string",
                  "timedOut": null,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var dbName = utils.genDbName();\n_assert[\"default\"].equal(typeof dbName === 'string', true);\ndone();",
                  "err": {},
                  "uuid": "22722f8b-7701-42c8-9eb2-3888eaeb5be7",
                  "parentUUID": "10416af4-0c44-485f-851f-cb2b04076357",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "genDbName(\"\") must return a string",
                  "fullTitle": "#--- Utils module Test Suite genDbName: utils.genDbName(string) -> genDbName genDbName(\"\") must return a string",
                  "timedOut": null,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var appName = '';\nvar dbName = utils.genDbName(appName);\n_assert[\"default\"].equal(typeof dbName === 'string', true);\ndone();",
                  "err": {},
                  "uuid": "31c6cd1c-06c5-480e-9950-0e3441f9392a",
                  "parentUUID": "10416af4-0c44-485f-851f-cb2b04076357",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "genDbName(My App) must return VooduX_my_app",
                  "fullTitle": "#--- Utils module Test Suite genDbName: utils.genDbName(string) -> genDbName genDbName(My App) must return VooduX_my_app",
                  "timedOut": null,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var appName = 'My App';\nvar dbName = utils.genDbName(appName);\n_assert[\"default\"].equal(typeof dbName === 'string', true);\n_assert[\"default\"].equal(dbName, 'VooduX_my_app');\ndone();",
                  "err": {},
                  "uuid": "adcee5fa-c519-4ff4-a75c-2b57fae19cf7",
                  "parentUUID": "10416af4-0c44-485f-851f-cb2b04076357",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "22722f8b-7701-42c8-9eb2-3888eaeb5be7",
                "31c6cd1c-06c5-480e-9950-0e3441f9392a",
                "adcee5fa-c519-4ff4-a75c-2b57fae19cf7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 47,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "288bdf18-3bf6-4a24-9c83-ac4456fd7531",
              "title": "Mongoose 2 Dexie: utils.mongooseToDexieTableString(schema) -> Mongoose schema conversion to Dexie table config",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Table config must have __id as Primary Key",
                  "fullTitle": "#--- Utils module Test Suite Mongoose 2 Dexie: utils.mongooseToDexieTableString(schema) -> Mongoose schema conversion to Dexie table config Table config must have __id as Primary Key",
                  "timedOut": null,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tableConfigArray = tableConfig.split(',');\n_assert[\"default\"].equal(tableConfigArray[0], '++__id');\ndone();",
                  "err": {},
                  "uuid": "098c36f7-e714-43a6-9aa2-729776936e21",
                  "parentUUID": "288bdf18-3bf6-4a24-9c83-ac4456fd7531",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Table config must have _id ",
                  "fullTitle": "#--- Utils module Test Suite Mongoose 2 Dexie: utils.mongooseToDexieTableString(schema) -> Mongoose schema conversion to Dexie table config Table config must have _id ",
                  "timedOut": null,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tableConfigArray = tableConfig.split(',');\n_assert[\"default\"].equal(tableConfigArray[1], '_id');\ndone();",
                  "err": {},
                  "uuid": "a21ff137-7096-47f8-b533-1749149f432f",
                  "parentUUID": "288bdf18-3bf6-4a24-9c83-ac4456fd7531",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "cards property must be multi entry",
                  "fullTitle": "#--- Utils module Test Suite Mongoose 2 Dexie: utils.mongooseToDexieTableString(schema) -> Mongoose schema conversion to Dexie table config cards property must be multi entry",
                  "timedOut": null,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tableConfigArray = tableConfig.split(',');\nvar foundMultiEntry = false;\ntableConfigArray.forEach(function (propertyName) {\n  if (propertyName === '*cards') {\n    foundMultiEntry = true;\n  }\n});\n_assert[\"default\"].equal(foundMultiEntry, true);\ndone();",
                  "err": {},
                  "uuid": "af30941f-33bb-4c1d-b269-922ae81c20e2",
                  "parentUUID": "288bdf18-3bf6-4a24-9c83-ac4456fd7531",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "notIndexed property shall not be present on table config because it is not indexed",
                  "fullTitle": "#--- Utils module Test Suite Mongoose 2 Dexie: utils.mongooseToDexieTableString(schema) -> Mongoose schema conversion to Dexie table config notIndexed property shall not be present on table config because it is not indexed",
                  "timedOut": null,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tableConfigArray = tableConfig.split(',');\nvar foundnotIndexed = false;\ntableConfigArray.forEach(function (propertyName) {\n  if (propertyName === 'notIndexed') {\n    foundnotIndexed = true;\n  }\n});\n_assert[\"default\"].equal(foundnotIndexed, false);\ndone();",
                  "err": {},
                  "uuid": "af4067c0-a1e1-4845-ba07-97d57b19aea7",
                  "parentUUID": "288bdf18-3bf6-4a24-9c83-ac4456fd7531",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "098c36f7-e714-43a6-9aa2-729776936e21",
                "a21ff137-7096-47f8-b533-1749149f432f",
                "af30941f-33bb-4c1d-b269-922ae81c20e2",
                "af4067c0-a1e1-4845-ba07-97d57b19aea7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 65,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c5d48207-2ea4-48d2-a2c3-7d890cfe1fe1",
              "title": "lunr search token generating",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Returned token must be an array",
                  "fullTitle": "#--- Utils module Test Suite lunr search token generating Returned token must be an array",
                  "timedOut": null,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _error = null;\nvar _data = null;\ntry {\n  var text = 'text goes here';\n  var token = utils.getSearchTokenStream(text);\n  _data = token;\n} catch (e) {\n  console.log(e);\n  _error = e;\n  _data = null;\n}\n_assert[\"default\"].equal(Array.isArray(_data), true);\ndone();",
                  "err": {},
                  "uuid": "7f93b392-4ab8-45cc-be37-0fa75729ca8f",
                  "parentUUID": "c5d48207-2ea4-48d2-a2c3-7d890cfe1fe1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Returned token must have 3 entries",
                  "fullTitle": "#--- Utils module Test Suite lunr search token generating Returned token must have 3 entries",
                  "timedOut": null,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _error = null;\nvar _data = null;\ntry {\n  var text = 'text goes here';\n  var token = utils.getSearchTokenStream(text);\n  _data = token;\n} catch (e) {\n  console.log(e);\n  _error = e;\n  _data = null;\n}\n_assert[\"default\"].equal(_data.length, 3);\ndone();",
                  "err": {},
                  "uuid": "df3747d8-b503-45a9-bb7a-a09055929ddc",
                  "parentUUID": "c5d48207-2ea4-48d2-a2c3-7d890cfe1fe1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Returned token must have 0 entries",
                  "fullTitle": "#--- Utils module Test Suite lunr search token generating Returned token must have 0 entries",
                  "timedOut": null,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _error = null;\nvar _data = null;\ntry {\n  var text = '';\n  var token = utils.getSearchTokenStream(text);\n  _data = token;\n} catch (e) {\n  console.log(e);\n  _error = e;\n  _data = null;\n}\n_assert[\"default\"].equal(_data.length, 0);\ndone();",
                  "err": {},
                  "uuid": "3cae7ab0-0e2b-4898-8f50-c056df2b6647",
                  "parentUUID": "c5d48207-2ea4-48d2-a2c3-7d890cfe1fe1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7f93b392-4ab8-45cc-be37-0fa75729ca8f",
                "df3747d8-b503-45a9-bb7a-a09055929ddc",
                "3cae7ab0-0e2b-4898-8f50-c056df2b6647"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 32,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "docs/reports/unit-testing",
        "overwrite": false,
        "reportTitle": "My Custom Title",
        "showPassed": true,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}