{
  "stats": {
    "suites": 2,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2021-02-24T04:41:27.141Z",
    "end": "2021-02-24T04:41:27.750Z",
    "duration": 609,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "633a7bca-58fd-4d4f-a56f-83a161cc63a6",
      "title": "",
      "fullFile": "cypress/integration/foundation_spec.js",
      "file": "cypress/integration/foundation_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "165bd599-67b3-4230-8405-7c93ee956c6d",
          "title": "#--- Foundation Class Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
              "title": "Check class integrity",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Foundation must starts",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity Foundation must starts",
                  "timedOut": null,
                  "duration": 133,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee() {\n  var _yield$foundation$sta, error, data;\n  return _regenerator[\"default\"].wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return foundation.start();\n        case 2:\n          _yield$foundation$sta = _context.sent;\n          error = _yield$foundation$sta.error;\n          data = _yield$foundation$sta.data;\n          _assert[\"default\"].equal(error, null);\n          _assert[\"default\"].notEqual(data, null);\n          if (error) {\n            done(error);\n          } else {\n            done();\n          }\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();",
                  "err": {},
                  "uuid": "aed923c9-23ed-4f65-82cb-d1262963dedd",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Double starts the Foundation shall to raise an error",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity Double starts the Foundation shall to raise an error",
                  "timedOut": null,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2() {\n  var _yield$foundation$sta2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return foundation.start();\n        case 2:\n          _yield$foundation$sta2 = _context2.sent;\n          error = _yield$foundation$sta2.error;\n          data = _yield$foundation$sta2.data;\n          _assert[\"default\"].notEqual(error, null);\n          _assert[\"default\"].equal(data, null);\n          done();\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n}))();",
                  "err": {},
                  "uuid": "144b6107-a980-4f21-857f-48d65ec2bfcb",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Foundation must have a constructor",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity Foundation must have a constructor",
                  "timedOut": null,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(Foundation.constructor, Function);\ndone();",
                  "err": {},
                  "uuid": "a0202bf8-2ab2-4081-884f-2bf5a2c79ba6",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation must be instance of Foundation",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation must be instance of Foundation",
                  "timedOut": null,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(foundation instanceof Foundation, true);\ndone();",
                  "err": {},
                  "uuid": "756b2c81-200b-4a65-ba76-0e0739007c95",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Foundation.Schema static method must return a constructor",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity Foundation.Schema static method must return a constructor",
                  "timedOut": null,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(Foundation.Schema.constructor, Function);\ndone();",
                  "err": {},
                  "uuid": "5e6b9660-49f7-49fb-930c-79bab1efb3a6",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Foundation.Schema static method must create a Mongoose like schema",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity Foundation.Schema static method must create a Mongoose like schema",
                  "timedOut": null,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var schema = new Foundation.Schema(jsonSchema);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(schema.obj) === 'object', true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(schema.paths) === 'object', true);\n_assert[\"default\"].equal(Object.keys(jsonSchema).reverse().join(','), Object.keys(schema.paths).reverse().join(',').replace(/_id,/gi, ''));\ndone();",
                  "err": {},
                  "uuid": "bf302dec-5f1f-4f68-a162-a362ff277da1",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.name getter must return the application name",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.name getter must return the application name",
                  "timedOut": null,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(typeof foundation.name === 'string', true);\n_assert[\"default\"].equal(foundation.name, name);\ndone();",
                  "err": {},
                  "uuid": "78627182-c096-4e5c-af77-a435c64deee5",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.name setter must set the application name",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.name setter must set the application name",
                  "timedOut": null,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var newName = 'My New App Name';\nfoundation.name = newName;\n_assert[\"default\"].equal(typeof foundation.name === 'string', true);\n_assert[\"default\"].equal(foundation.name, newName);\ndone();",
                  "err": {},
                  "uuid": "a55ac5cf-29eb-4d31-8746-f55f83ff5700",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.guid getter must return the application UUID string",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.guid getter must return the application UUID string",
                  "timedOut": null,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(typeof foundation.guid === 'string', true);\ndone();",
                  "err": {},
                  "uuid": "1d496e37-32d6-4b53-9221-c81bf6bb42b3",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.guid getter must return a 36 bytes string",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.guid getter must return a 36 bytes string",
                  "timedOut": null,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bytes = new Blob([foundation.guid]).size;\n_assert[\"default\"].equal(bytes, 36);\ndone();",
                  "err": {},
                  "uuid": "36f73281-da41-409e-b354-d919adbc3ace",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.guid is getter only",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.guid is getter only",
                  "timedOut": null,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  foundation.guid = 22222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(foundation.guid, 22222);\ndone();",
                  "err": {},
                  "uuid": "6554676a-813b-45f2-a9cc-bd349392dac8",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.tabId getter must return the session UUID string. Each browser tab is considered a different session.",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.tabId getter must return the session UUID string. Each browser tab is considered a different session.",
                  "timedOut": null,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(typeof foundation.tabId === 'string', true);\ndone();",
                  "err": {},
                  "uuid": "aafc69b7-039b-4ec3-8bdf-ef4e0bde7295",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.tabId getter must return a 36 bytes string",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.tabId getter must return a 36 bytes string",
                  "timedOut": null,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bytes = new Blob([foundation.tabId]).size;\n_assert[\"default\"].equal(bytes, 36);\ndone();",
                  "err": {},
                  "uuid": "f60589b4-1ec1-47df-9b46-9200a8058e67",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.data is getter only",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.data is getter only",
                  "timedOut": null,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  foundation.data = 'string text';\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(foundation.data, 'string text');\ndone();",
                  "err": {},
                  "uuid": "96cd3f25-0f40-46fe-bc1e-afc824dbed25",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.dataStrategy is getter only",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.dataStrategy is getter only",
                  "timedOut": null,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  foundation.dataStrategy = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(foundation.dataStrategy, 222222);\ndone();",
                  "err": {},
                  "uuid": "80821b7c-261e-4c94-9f53-376c403fc83e",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.started is getter only",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.started is getter only",
                  "timedOut": null,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  foundation.started = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(foundation.started, 222222);\ndone();",
                  "err": {},
                  "uuid": "612b89f4-2996-46b4-a160-5427c5476b53",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.applicationWorker is getter only",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.applicationWorker is getter only",
                  "timedOut": null,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  foundation.applicationWorker = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(foundation.applicationWorker, 222222);\ndone();",
                  "err": {},
                  "uuid": "3c2c3c1b-4b0d-4193-9286-be5b4d5e4997",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.useWorker is getter only",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.useWorker is getter only",
                  "timedOut": null,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  foundation.useWorker = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(foundation.useWorker, 222222);\ndone();",
                  "err": {},
                  "uuid": "299e4e41-50aa-4c20-af50-79b9d0d567e0",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Foundation.Schema is static",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity Foundation.Schema is static",
                  "timedOut": null,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal((0, _typeof2[\"default\"])(Foundation.Schema), 'function');\ndone();",
                  "err": {},
                  "uuid": "7db87d37-d103-4ed6-9dc6-993de91adcc8",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "foundation.tabId is getter only",
                  "fullTitle": "#--- Foundation Class Test Suite Check class integrity foundation.tabId is getter only",
                  "timedOut": null,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  foundation.tabId = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\ndone();",
                  "err": {},
                  "uuid": "065b28f6-41e7-4e04-ac81-451d65ec44f7",
                  "parentUUID": "4326a048-05a1-4b9d-b5d8-d9d8de79c973",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aed923c9-23ed-4f65-82cb-d1262963dedd",
                "144b6107-a980-4f21-857f-48d65ec2bfcb",
                "a0202bf8-2ab2-4081-884f-2bf5a2c79ba6",
                "756b2c81-200b-4a65-ba76-0e0739007c95",
                "5e6b9660-49f7-49fb-930c-79bab1efb3a6",
                "bf302dec-5f1f-4f68-a162-a362ff277da1",
                "78627182-c096-4e5c-af77-a435c64deee5",
                "a55ac5cf-29eb-4d31-8746-f55f83ff5700",
                "1d496e37-32d6-4b53-9221-c81bf6bb42b3",
                "36f73281-da41-409e-b354-d919adbc3ace",
                "6554676a-813b-45f2-a9cc-bd349392dac8",
                "aafc69b7-039b-4ec3-8bdf-ef4e0bde7295",
                "f60589b4-1ec1-47df-9b46-9200a8058e67",
                "96cd3f25-0f40-46fe-bc1e-afc824dbed25",
                "80821b7c-261e-4c94-9f53-376c403fc83e",
                "612b89f4-2996-46b4-a160-5427c5476b53",
                "3c2c3c1b-4b0d-4193-9286-be5b4d5e4997",
                "299e4e41-50aa-4c20-af50-79b9d0d567e0",
                "7db87d37-d103-4ed6-9dc6-993de91adcc8",
                "065b28f6-41e7-4e04-ac81-451d65ec44f7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 385,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "docs/reports/unit-testing",
        "overwrite": false,
        "reportTitle": "My Custom Title",
        "showPassed": true,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}