{
  "stats": {
    "suites": 5,
    "tests": 74,
    "passes": 74,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-16T21:07:39.446Z",
    "end": "2021-03-16T21:07:43.383Z",
    "duration": 3937,
    "testsRegistered": 74,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8a1264b2-2a77-45f1-9668-ef53f98f6ef7",
      "title": "",
      "fullFile": "cypress/integration/DataEntity_spec.js",
      "file": "cypress/integration/DataEntity_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "694df33c-8731-4e9d-8856-8752b321456f",
          "title": "#--- DataEntity Class Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "We must be able to delete database",
              "fullTitle": "#--- DataEntity Class Test Suite We must be able to delete database",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee40() {\n  var _error;\n  return _regenerator[\"default\"].wrap(function _callee40$(_context40) {\n    while (1) {\n      switch (_context40.prev = _context40.next) {\n        case 0:\n          _error = null;\n          _context40.prev = 1;\n          _context40.next = 4;\n          return foundation.localDatabaseTransport[\"delete\"]();\n        case 4:\n          _context40.next = 9;\n          break;\n        case 6:\n          _context40.prev = 6;\n          _context40.t0 = _context40[\"catch\"](1);\n          _error = _context40.t0;\n        case 9:\n          _assert[\"default\"].equal(_error, null);\n          done();\n        case 11:\n        case \"end\":\n          return _context40.stop();\n      }\n    }\n  }, _callee40, null, [[1, 6]]);\n}))();",
              "err": {},
              "uuid": "13e539cd-b0ab-4813-9d5d-d3ac2f45f041",
              "parentUUID": "694df33c-8731-4e9d-8856-8752b321456f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "589ac732-268a-45f2-b4b3-68730afbf9b5",
              "title": "Check class integrity",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "DataEntity must have a constructor",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity DataEntity must have a constructor",
                  "timedOut": null,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(DataEntity.constructor, Function);\ndone();",
                  "err": {},
                  "uuid": "28c5e76c-1293-40c0-92d4-eedd3ac37d22",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Using Product DataEntity API imported from foundation DataEntity API must works",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Using Product DataEntity API imported from foundation DataEntity API must works",
                  "timedOut": null,
                  "duration": 79,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2() {\n  return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          foundation.importDataEntity({\n            entity: 'Product',\n            dataEntity: new MyCustomizedDataEntity({\n              foundation: foundation,\n              entity: 'Product',\n              schema: productSchema\n            })\n          });\n          _context2.next = 3;\n          return foundation.start();\n        case 3:\n          Product = foundation.data.Product;\n          _assert[\"default\"].equal(Product !== null, true);\n          done();\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n}))();",
                  "err": {},
                  "uuid": "1c618d1a-83dc-4c8d-8535-2f2fef397ffe",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer must be instance of DataEntity",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer must be instance of DataEntity",
                  "timedOut": null,
                  "duration": 57,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(Customer instanceof DataEntity, true);\ndone();",
                  "err": {},
                  "uuid": "f2492fb7-4166-4885-b7ec-c17def3d5ec9",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.entity must be equal to \"Customer\"",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.entity must be equal to \"Customer\"",
                  "timedOut": null,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(Customer.entity === 'Customer', true);\ndone();",
                  "err": {},
                  "uuid": "bdb47416-ae25-46f1-81e8-284c5c3c2f1a",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.entity is getter only",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.entity is getter only",
                  "timedOut": null,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  Customer.entity = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(Customer.entity, 222222);\ndone();",
                  "err": {},
                  "uuid": "af3b56e7-737d-42e3-a93a-fbf85af2fb09",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.strategy is getter only",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.strategy is getter only",
                  "timedOut": null,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  Customer.entity = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(Customer.strategy, 222222);\ndone();",
                  "err": {},
                  "uuid": "3912b6d5-df40-4f89-80b6-bc5367b20c9b",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.strategy must be \"offline\"",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.strategy must be \"offline\"",
                  "timedOut": null,
                  "duration": 45,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal(Customer.strategy, 'offline');\ndone();",
                  "err": {},
                  "uuid": "cf8ec14f-05be-465c-9e49-c097b087a6a7",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.schema is getter only",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.schema is getter only",
                  "timedOut": null,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  Customer.schema = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(Customer.schema, 222222);\ndone();",
                  "err": {},
                  "uuid": "8bab10c6-a72a-4b69-8765-468f668e81be",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.Model() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.Model() must be a function",
                  "timedOut": null,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.Model), 'function');\ndone();",
                  "err": {},
                  "uuid": "ca6501ff-3e93-4d64-ae7a-4cef24de90c6",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.add() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.add() must be a function",
                  "timedOut": null,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.add), 'function');\ndone();",
                  "err": {},
                  "uuid": "fadd9f59-6507-4406-8b28-99c66de4b5a5",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.add() without parameter must returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.add() without parameter must returns an error",
                  "timedOut": null,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee3() {\n  var _error, _data, _yield$Customer$add, error, data;\n  return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context3.prev = 2;\n          _context3.next = 5;\n          return Customer.add();\n        case 5:\n          _yield$Customer$add = _context3.sent;\n          error = _yield$Customer$add.error;\n          data = _yield$Customer$add.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context3.next = 15;\n          break;\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](2);\n          _error = _context3.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'You must pass a valid JSON document as parameter to DataEntity.add() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "38b45156-3cd7-4e46-a838-9dd94a45edd9",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.add({}) with empty object must returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.add({}) with empty object must returns an error",
                  "timedOut": null,
                  "duration": 68,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee4() {\n  var _error, _data, _yield$Customer$add2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context4.prev = 2;\n          _context4.next = 5;\n          return Customer.add({});\n        case 5:\n          _yield$Customer$add2 = _context4.sent;\n          error = _yield$Customer$add2.error;\n          data = _yield$Customer$add2.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context4.next = 15;\n          break;\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](2);\n          _error = _context4.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          done();\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "bf360d08-c0d6-4fa8-b26e-4523c15cfc50",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.add with missing a required param must returns an error - invalid",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.add with missing a required param must returns an error - invalid",
                  "timedOut": null,
                  "duration": 39,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee5() {\n  var _error, _data, invalid, _yield$Customer$add3, error, data;\n  return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          invalid = false;\n          _context5.prev = 3;\n          _context5.next = 6;\n          return Customer.add({\n            name: 'test'\n          });\n        case 6:\n          _yield$Customer$add3 = _context5.sent;\n          error = _yield$Customer$add3.error;\n          data = _yield$Customer$add3.data;\n          if (error) {\n            _error = error;\n            invalid = true;\n          } else {\n            _data = data;\n            invalid = false;\n          }\n          _context5.next = 17;\n          break;\n        case 12:\n          _context5.prev = 12;\n          _context5.t0 = _context5[\"catch\"](3);\n          _error = _context5.t0;\n          _data = null;\n          invalid = true;\n        case 17:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(invalid, true);\n          done();\n        case 21:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _callee5, null, [[3, 12]]);\n}))();",
                  "err": {},
                  "uuid": "8f3effd4-44a7-44e1-96f6-a517a3103aad",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit() without parameter must returns an  validation error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit() without parameter must returns an  validation error",
                  "timedOut": null,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee6() {\n  var _error, _data, _yield$Customer$edit, error, data;\n  return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context6.prev = 2;\n          _context6.next = 5;\n          return Customer.edit();\n        case 5:\n          _yield$Customer$edit = _context6.sent;\n          error = _yield$Customer$edit.error;\n          data = _yield$Customer$edit.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context6.next = 15;\n          break;\n        case 11:\n          _context6.prev = 11;\n          _context6.t0 = _context6[\"catch\"](2);\n          _error = _context6.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'You must pass a valid JSON document as parameter to DataEntity.edit() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "d6dcb7b1-dab9-4c99-9696-ef412420bec4",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit(null) returns an  validation error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit(null) returns an  validation error",
                  "timedOut": null,
                  "duration": 44,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee7() {\n  var _error, _data, _yield$Customer$edit2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context7.prev = 2;\n          _context7.next = 5;\n          return Customer.edit(null);\n        case 5:\n          _yield$Customer$edit2 = _context7.sent;\n          error = _yield$Customer$edit2.error;\n          data = _yield$Customer$edit2.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context7.next = 15;\n          break;\n        case 11:\n          _context7.prev = 11;\n          _context7.t0 = _context7[\"catch\"](2);\n          _error = _context7.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'You must pass a valid JSON document as parameter to DataEntity.edit() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _callee7, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "0e5cf8ba-05b7-49e7-8d9c-ec75583f98c4",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit(null, {a: 1}) returns an validation error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit(null, {a: 1}) returns an validation error",
                  "timedOut": null,
                  "duration": 33,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee8() {\n  var _error, _data, _yield$Customer$edit3, error, data;\n  return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context8.prev = 2;\n          _context8.next = 5;\n          return Customer.edit(null, {\n            a: 1\n          });\n        case 5:\n          _yield$Customer$edit3 = _context8.sent;\n          error = _yield$Customer$edit3.error;\n          data = _yield$Customer$edit3.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context8.next = 15;\n          break;\n        case 11:\n          _context8.prev = 11;\n          _context8.t0 = _context8[\"catch\"](2);\n          _error = _context8.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'You must pass a valid primary key value as parameter to DataEntity.edit() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _callee8, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "df5cac9a-b9a1-4e2a-9eba-813c063b14a7",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit(1, {a: 1}) empty document returns an validation error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit(1, {a: 1}) empty document returns an validation error",
                  "timedOut": null,
                  "duration": 35,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee9() {\n  var _error, _data, _yield$Customer$edit4, error, data;\n  return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context9.prev = 2;\n          _context9.next = 5;\n          return Customer.edit(1, {\n            a: 1\n          });\n        case 5:\n          _yield$Customer$edit4 = _context9.sent;\n          error = _yield$Customer$edit4.error;\n          data = _yield$Customer$edit4.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context9.next = 15;\n          break;\n        case 11:\n          _context9.prev = 11;\n          _context9.t0 = _context9[\"catch\"](2);\n          _error = _context9.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'Document must have doc.__id (Integer) when calling DataEntity.edit() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _callee9, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "ee90743c-5abc-43cb-b824-9ac59e0f8f34",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit(1, {__id: 1}) empty document returns an validation error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit(1, {__id: 1}) empty document returns an validation error",
                  "timedOut": null,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee10() {\n  var _error, _data, _yield$Customer$edit5, error, data;\n  return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context10.prev = 2;\n          _context10.next = 5;\n          return Customer.edit(1, {\n            __id: 1\n          });\n        case 5:\n          _yield$Customer$edit5 = _context10.sent;\n          error = _yield$Customer$edit5.error;\n          data = _yield$Customer$edit5.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context10.next = 15;\n          break;\n        case 11:\n          _context10.prev = 11;\n          _context10.t0 = _context10[\"catch\"](2);\n          _error = _context10.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'Document must have doc._id (ObjectID) when calling DataEntity.edit() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _callee10, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "629466d1-b28d-4187-be5e-9e8c3da031f1",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit(1, {__id: 1, _id: \"dffgdfgdfg\"}) empty document returns an validation error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit(1, {__id: 1, _id: \"dffgdfgdfg\"}) empty document returns an validation error",
                  "timedOut": null,
                  "duration": 56,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee11() {\n  var _error, _data, _yield$Customer$edit6, error, data;\n  return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context11.prev = 2;\n          _context11.next = 5;\n          return Customer.edit(1, {\n            __id: 1,\n            _id: 'dffgdfgdfg'\n          });\n        case 5:\n          _yield$Customer$edit6 = _context11.sent;\n          error = _yield$Customer$edit6.error;\n          data = _yield$Customer$edit6.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context11.next = 15;\n          break;\n        case 11:\n          _context11.prev = 11;\n          _context11.t0 = _context11[\"catch\"](2);\n          _error = _context11.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          done();\n        case 18:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _callee11, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "49cf9817-2164-4b0a-8881-d652aa1facd3",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.edit() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.edit() must be a function",
                  "timedOut": null,
                  "duration": 51,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.edit), 'function');\ndone();",
                  "err": {},
                  "uuid": "64a53b73-261a-466f-ade1-d2132fdd205e",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.delete() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.delete() must be a function",
                  "timedOut": null,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer[\"delete\"]), 'function');\ndone();",
                  "err": {},
                  "uuid": "9dbf3270-b6a9-4f54-84e4-224f9bc15be7",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.findById() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.findById() must be a function",
                  "timedOut": null,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.findById), 'function');\ndone();",
                  "err": {},
                  "uuid": "a5540763-afa4-4f16-bb1a-fd6e9259a35c",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.findById() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.findById() must be a function",
                  "timedOut": null,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.findById), 'function');\ndone();",
                  "err": {},
                  "uuid": "a453c6e6-4f73-434f-9de9-624baca64fa1",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.findAll() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.findAll() must be a function",
                  "timedOut": null,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.findAll), 'function');\ndone();",
                  "err": {},
                  "uuid": "2fd94869-98a7-4f27-86b3-2ddd5ca47254",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.count() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.count() must be a function",
                  "timedOut": null,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.count), 'function');\ndone();",
                  "err": {},
                  "uuid": "8c846444-c4ac-46ad-a950-8d09bb678eab",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product must be instance of DataEntity",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product must be instance of DataEntity",
                  "timedOut": null,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(Product instanceof DataEntity, true);\ndone();",
                  "err": {},
                  "uuid": "0d2a1065-fbaa-48e8-a9e6-2ceb8d2c5de8",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.entity must be equal to \"Product\"",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.entity must be equal to \"Product\"",
                  "timedOut": null,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(Product.entity === 'Product', true);\ndone();",
                  "err": {},
                  "uuid": "22c9498e-638b-473b-8f6c-b6aa11aab902",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.entity is getter only",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.entity is getter only",
                  "timedOut": null,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  Product.entity = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(Product.entity, 222222);\ndone();",
                  "err": {},
                  "uuid": "39eae400-ad5c-4c52-94fe-a378231842d2",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.strategy is getter only",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.strategy is getter only",
                  "timedOut": null,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  Product.entity = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(Product.strategy, 222222);\ndone();",
                  "err": {},
                  "uuid": "cf5a03d1-9eaf-466f-8400-12007f12faa6",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.strategy must be \"offline\"",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.strategy must be \"offline\"",
                  "timedOut": null,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal(Product.strategy, 'offline');\ndone();",
                  "err": {},
                  "uuid": "b0ecf765-39d9-4fca-9d1f-eb223eca672f",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.schema is getter only",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.schema is getter only",
                  "timedOut": null,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  Product.schema = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(Product.schema, 222222);\ndone();",
                  "err": {},
                  "uuid": "573500ed-885d-4b1c-b622-11b41a3a370e",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.Model() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.Model() must be a function",
                  "timedOut": null,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.Model), 'function');\ndone();",
                  "err": {},
                  "uuid": "abd8d5f2-8588-4810-8067-7dfa6e529509",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.add() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.add() must be a function",
                  "timedOut": null,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.add), 'function');\ndone();",
                  "err": {},
                  "uuid": "2533762e-124f-45e7-9add-a97ff7fff157",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Product.add() without parameter must returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Product.add() without parameter must returns an error",
                  "timedOut": null,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee12() {\n  var _error, _data, _yield$Product$add, error, data;\n  return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context12.prev = 2;\n          _context12.next = 5;\n          return Product.add();\n        case 5:\n          _yield$Product$add = _context12.sent;\n          error = _yield$Product$add.error;\n          data = _yield$Product$add.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context12.next = 15;\n          break;\n        case 11:\n          _context12.prev = 11;\n          _context12.t0 = _context12[\"catch\"](2);\n          _error = _context12.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'You must pass a valid JSON document as parameter to DataEntity.add() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _callee12, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "cd59e449-f8ca-409e-85ae-711680756699",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Product.add({}) with empty object must returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Product.add({}) with empty object must returns an error",
                  "timedOut": null,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee13() {\n  var _error, _data, _yield$Product$add2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context13.prev = 2;\n          _context13.next = 5;\n          return Product.add({});\n        case 5:\n          _yield$Product$add2 = _context13.sent;\n          error = _yield$Product$add2.error;\n          data = _yield$Product$add2.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context13.next = 15;\n          break;\n        case 11:\n          _context13.prev = 11;\n          _context13.t0 = _context13[\"catch\"](2);\n          _error = _context13.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          done();\n        case 18:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _callee13, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "f090b000-7248-4f36-bfe4-4327ff2106d8",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Product.edit() without parameter must returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Product.edit() without parameter must returns an error",
                  "timedOut": null,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee14() {\n  var _error, _data, _yield$Product$edit, error, data;\n  return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context14.prev = 2;\n          _context14.next = 5;\n          return Product.edit();\n        case 5:\n          _yield$Product$edit = _context14.sent;\n          error = _yield$Product$edit.error;\n          data = _yield$Product$edit.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context14.next = 15;\n          break;\n        case 11:\n          _context14.prev = 11;\n          _context14.t0 = _context14[\"catch\"](2);\n          _error = _context14.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'You must pass a valid JSON document as parameter to DataEntity.edit() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _callee14, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "946b2848-2c90-4990-bf32-3012fa152dfe",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit(null) returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit(null) returns an error",
                  "timedOut": null,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee15() {\n  var _error, _data, _yield$Customer$edit7, error, data;\n  return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context15.prev = 2;\n          _context15.next = 5;\n          return Customer.edit(null);\n        case 5:\n          _yield$Customer$edit7 = _context15.sent;\n          error = _yield$Customer$edit7.error;\n          data = _yield$Customer$edit7.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context15.next = 15;\n          break;\n        case 11:\n          _context15.prev = 11;\n          _context15.t0 = _context15[\"catch\"](2);\n          _error = _context15.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          done();\n        case 18:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _callee15, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "315f60f2-96cd-4dac-9e4d-5a5be1b41abe",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Product.edit(1, {}) empty document returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Product.edit(1, {}) empty document returns an error",
                  "timedOut": null,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee16() {\n  var _error, _data, _yield$Product$edit2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context16.prev = 2;\n          _context16.next = 5;\n          return Product.edit(1, {});\n        case 5:\n          _yield$Product$edit2 = _context16.sent;\n          error = _yield$Product$edit2.error;\n          data = _yield$Product$edit2.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context16.next = 15;\n          break;\n        case 11:\n          _context16.prev = 11;\n          _context16.t0 = _context16[\"catch\"](2);\n          _error = _context16.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          done();\n        case 18:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _callee16, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "2123fb86-82cb-4e14-b55a-19cbade461d5",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.edit() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.edit() must be a function",
                  "timedOut": null,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.edit), 'function');\ndone();",
                  "err": {},
                  "uuid": "52aa8902-eec8-4535-b02a-2bc553ef34fb",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.delete() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.delete() must be a function",
                  "timedOut": null,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product[\"delete\"]), 'function');\ndone();",
                  "err": {},
                  "uuid": "57b3c18d-4272-4509-bcaf-1bb9a98e826a",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.findById() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.findById() must be a function",
                  "timedOut": null,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.findById), 'function');\ndone();",
                  "err": {},
                  "uuid": "6be9833e-919c-4ece-a099-ab41095e75be",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.findById() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.findById() must be a function",
                  "timedOut": null,
                  "duration": 44,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.findById), 'function');\ndone();",
                  "err": {},
                  "uuid": "b6ff3042-0efe-4be3-ac98-3e0282ac3145",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.findAll() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.findAll() must be a function",
                  "timedOut": null,
                  "duration": 43,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.findAll), 'function');\ndone();",
                  "err": {},
                  "uuid": "c3cf07a8-4fd5-4abe-9f8f-12948ba22a54",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.count() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.count() must be a function",
                  "timedOut": null,
                  "duration": 50,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.count), 'function');\ndone();",
                  "err": {},
                  "uuid": "8131887b-81e7-4a24-8430-83396f895e3b",
                  "parentUUID": "589ac732-268a-45f2-b4b3-68730afbf9b5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "28c5e76c-1293-40c0-92d4-eedd3ac37d22",
                "1c618d1a-83dc-4c8d-8535-2f2fef397ffe",
                "f2492fb7-4166-4885-b7ec-c17def3d5ec9",
                "bdb47416-ae25-46f1-81e8-284c5c3c2f1a",
                "af3b56e7-737d-42e3-a93a-fbf85af2fb09",
                "3912b6d5-df40-4f89-80b6-bc5367b20c9b",
                "cf8ec14f-05be-465c-9e49-c097b087a6a7",
                "8bab10c6-a72a-4b69-8765-468f668e81be",
                "ca6501ff-3e93-4d64-ae7a-4cef24de90c6",
                "fadd9f59-6507-4406-8b28-99c66de4b5a5",
                "38b45156-3cd7-4e46-a838-9dd94a45edd9",
                "bf360d08-c0d6-4fa8-b26e-4523c15cfc50",
                "8f3effd4-44a7-44e1-96f6-a517a3103aad",
                "d6dcb7b1-dab9-4c99-9696-ef412420bec4",
                "0e5cf8ba-05b7-49e7-8d9c-ec75583f98c4",
                "df5cac9a-b9a1-4e2a-9eba-813c063b14a7",
                "ee90743c-5abc-43cb-b824-9ac59e0f8f34",
                "629466d1-b28d-4187-be5e-9e8c3da031f1",
                "49cf9817-2164-4b0a-8881-d652aa1facd3",
                "64a53b73-261a-466f-ade1-d2132fdd205e",
                "9dbf3270-b6a9-4f54-84e4-224f9bc15be7",
                "a5540763-afa4-4f16-bb1a-fd6e9259a35c",
                "a453c6e6-4f73-434f-9de9-624baca64fa1",
                "2fd94869-98a7-4f27-86b3-2ddd5ca47254",
                "8c846444-c4ac-46ad-a950-8d09bb678eab",
                "0d2a1065-fbaa-48e8-a9e6-2ceb8d2c5de8",
                "22c9498e-638b-473b-8f6c-b6aa11aab902",
                "39eae400-ad5c-4c52-94fe-a378231842d2",
                "cf5a03d1-9eaf-466f-8400-12007f12faa6",
                "b0ecf765-39d9-4fca-9d1f-eb223eca672f",
                "573500ed-885d-4b1c-b622-11b41a3a370e",
                "abd8d5f2-8588-4810-8067-7dfa6e529509",
                "2533762e-124f-45e7-9add-a97ff7fff157",
                "cd59e449-f8ca-409e-85ae-711680756699",
                "f090b000-7248-4f36-bfe4-4327ff2106d8",
                "946b2848-2c90-4990-bf32-3012fa152dfe",
                "315f60f2-96cd-4dac-9e4d-5a5be1b41abe",
                "2123fb86-82cb-4e14-b55a-19cbade461d5",
                "52aa8902-eec8-4535-b02a-2bc553ef34fb",
                "57b3c18d-4272-4509-bcaf-1bb9a98e826a",
                "6be9833e-919c-4ece-a099-ab41095e75be",
                "b6ff3042-0efe-4be3-ac98-3e0282ac3145",
                "c3cf07a8-4fd5-4abe-9f8f-12948ba22a54",
                "8131887b-81e7-4a24-8430-83396f895e3b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1345,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f440d2f7-ed3c-428f-8e8b-8b8aef485319",
              "title": "Check data schema implementation",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Check model validation passing an invalid document should shall not to be validated",
                  "fullTitle": "#--- DataEntity Class Test Suite Check data schema implementation Check model validation passing an invalid document should shall not to be validated",
                  "timedOut": null,
                  "duration": 84,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var invalid = null;\nvar model = new Product.Model({\n  name: 'My Product'\n}, productSchema);\ninvalid = model.isNotValid();\n_assert[\"default\"].equal(!!invalid, true);",
                  "err": {},
                  "uuid": "7620e8c9-6766-46eb-91eb-544423343328",
                  "parentUUID": "f440d2f7-ed3c-428f-8e8b-8b8aef485319",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check model validation passing a valid document should shall to be validated",
                  "fullTitle": "#--- DataEntity Class Test Suite Check data schema implementation Check model validation passing a valid document should shall to be validated",
                  "timedOut": null,
                  "duration": 52,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var invalid = null;\nvar model = new Product.Model({\n  name: 'My Product',\n  vendor: 'The Vendor',\n  price: 10\n}, productSchema);\ninvalid = model.isNotValid();\n_assert[\"default\"].equal(!!invalid, false);",
                  "err": {},
                  "uuid": "81284663-3aa3-402f-a0d9-13a97bf6146f",
                  "parentUUID": "f440d2f7-ed3c-428f-8e8b-8b8aef485319",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Testing schema.validate method. product.price must be greater than 0",
                  "fullTitle": "#--- DataEntity Class Test Suite Check data schema implementation Testing schema.validate method. product.price must be greater than 0",
                  "timedOut": null,
                  "duration": 84,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var invalid = null;\nvar model = new Product.Model({\n  name: 'My Product',\n  vendor: 'The Vendor',\n  price: 0\n}, productSchema);\ninvalid = model.isNotValid();\n_assert[\"default\"].equal(!!invalid, true);",
                  "err": {},
                  "uuid": "8c0ecc38-9f96-4410-af53-2abbde5017ec",
                  "parentUUID": "f440d2f7-ed3c-428f-8e8b-8b8aef485319",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7620e8c9-6766-46eb-91eb-544423343328",
                "81284663-3aa3-402f-a0d9-13a97bf6146f",
                "8c0ecc38-9f96-4410-af53-2abbde5017ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 220,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
              "title": "Check class usage",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "We must be able to add new Customer",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to add new Customer",
                  "timedOut": null,
                  "duration": 73,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee17() {\n  var _error, _data, _yield$Customer$add4, error, data;\n  return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context17.prev = 2;\n          _context17.next = 5;\n          return Customer.add(CustomerDocument);\n        case 5:\n          _yield$Customer$add4 = _context17.sent;\n          error = _yield$Customer$add4.error;\n          data = _yield$Customer$add4.data;\n          _error = error;\n          _data = data;\n          _context17.next = 16;\n          break;\n        case 12:\n          _context17.prev = 12;\n          _context17.t0 = _context17[\"catch\"](2);\n          _error = _context17.t0;\n          _data = null;\n        case 16:\n          _assert[\"default\"].equal(_error, null);\n          if (_error) {\n            done(_error);\n          } else {\n            NewCustomerDocument = _data;\n            done();\n          }\n        case 18:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _callee17, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "4dc9d1fc-9904-419d-9e97-aa424bc0a17a",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "NewCustomerDocument must have valid __id (local ID)",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage NewCustomerDocument must have valid __id (local ID)",
                  "timedOut": null,
                  "duration": 43,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal((0, _typeof2[\"default\"])(NewCustomerDocument.__id), 'number');",
                  "err": {},
                  "uuid": "f6403ee2-95ca-445a-82e5-0bc6178cb17a",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "NewCustomerDocument must have valid _id (remote ID)",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage NewCustomerDocument must have valid _id (remote ID)",
                  "timedOut": null,
                  "duration": 46,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal((0, _typeof2[\"default\"])(NewCustomerDocument._id), 'string');",
                  "err": {},
                  "uuid": "68c154f6-2b2c-41c8-9b9f-d57ac1e04808",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to add new Product",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to add new Product",
                  "timedOut": null,
                  "duration": 63,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee18() {\n  var _error, _data, _yield$Product$add3, error, data;\n  return _regenerator[\"default\"].wrap(function _callee18$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context18.prev = 2;\n          _context18.next = 5;\n          return Product.add(ProductDocument);\n        case 5:\n          _yield$Product$add3 = _context18.sent;\n          error = _yield$Product$add3.error;\n          data = _yield$Product$add3.data;\n          _error = error;\n          _data = data;\n          _context18.next = 16;\n          break;\n        case 12:\n          _context18.prev = 12;\n          _context18.t0 = _context18[\"catch\"](2);\n          _error = _context18.t0;\n          _data = null;\n        case 16:\n          _assert[\"default\"].equal(_error, null);\n          if (_error) {\n            done(_error);\n          } else {\n            NewProductDocument = _data;\n            done();\n          }\n        case 18:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _callee18, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "96ccea63-7117-42a7-843c-1cfa69b8e6af",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "NewProductDocument must have valid __id (local ID)",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage NewProductDocument must have valid __id (local ID)",
                  "timedOut": null,
                  "duration": 44,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal((0, _typeof2[\"default\"])(NewProductDocument.__id), 'number');",
                  "err": {},
                  "uuid": "7d39d25a-4dd0-4183-9799-b4422547fbb6",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "NewProductDocument must have valid _id (remote ID)",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage NewProductDocument must have valid _id (remote ID)",
                  "timedOut": null,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal((0, _typeof2[\"default\"])(NewProductDocument._id), 'string');",
                  "err": {},
                  "uuid": "2b290e56-5d38-4be7-819f-72207bbc4739",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.findAll must return the added Customer by it name",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Customer.findAll must return the added Customer by it name",
                  "timedOut": null,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee19() {\n  var _error, _data, _yield$Customer$findA, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee19$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context19.prev = 2;\n          _context19.next = 5;\n          return Customer.findAll({\n            name: CustomerDocument.name\n          });\n        case 5:\n          _yield$Customer$findA = _context19.sent;\n          error = _yield$Customer$findA.error;\n          data = _yield$Customer$findA.data;\n          _error = error;\n          _data = data;\n          _context19.next = 16;\n          break;\n        case 12:\n          _context19.prev = 12;\n          _context19.t0 = _context19[\"catch\"](2);\n          _error = _context19.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (c) {\n            return c.name === CustomerDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, CustomerDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _callee19, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "9124c281-7452-49bd-9be4-abdb4e0712fd",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.findAll must return the added Product by it name",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Product.findAll must return the added Product by it name",
                  "timedOut": null,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee20() {\n  var _error, _data, _yield$Product$findAl, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee20$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context20.prev = 2;\n          _context20.next = 5;\n          return Product.findAll({\n            name: ProductDocument.name\n          });\n        case 5:\n          _yield$Product$findAl = _context20.sent;\n          error = _yield$Product$findAl.error;\n          data = _yield$Product$findAl.data;\n          _error = error;\n          _data = data;\n          _context20.next = 16;\n          break;\n        case 12:\n          _context20.prev = 12;\n          _context20.t0 = _context20[\"catch\"](2);\n          _error = _context20.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (p) {\n            return p.name === ProductDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, ProductDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _callee20, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "23e8dd03-41a6-4246-83c7-930270f1b230",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.findAll must return the added Customer ",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Customer.findAll must return the added Customer ",
                  "timedOut": null,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee21() {\n  var _error, _data, _yield$Customer$findA2, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee21$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context21.prev = 2;\n          _context21.next = 5;\n          return Customer.findAll();\n        case 5:\n          _yield$Customer$findA2 = _context21.sent;\n          error = _yield$Customer$findA2.error;\n          data = _yield$Customer$findA2.data;\n          _error = error;\n          _data = data;\n          _context21.next = 16;\n          break;\n        case 12:\n          _context21.prev = 12;\n          _context21.t0 = _context21[\"catch\"](2);\n          _error = _context21.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (c) {\n            return c.name === CustomerDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, CustomerDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _callee21, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "307001aa-0cc5-4f1f-b590-627751206510",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.findAll must return the added Product ",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Product.findAll must return the added Product ",
                  "timedOut": null,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee22() {\n  var _error, _data, _yield$Product$findAl2, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee22$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context22.prev = 2;\n          _context22.next = 5;\n          return Product.findAll();\n        case 5:\n          _yield$Product$findAl2 = _context22.sent;\n          error = _yield$Product$findAl2.error;\n          data = _yield$Product$findAl2.data;\n          _error = error;\n          _data = data;\n          _context22.next = 16;\n          break;\n        case 12:\n          _context22.prev = 12;\n          _context22.t0 = _context22[\"catch\"](2);\n          _error = _context22.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (p) {\n            return p.name === ProductDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, ProductDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _callee22, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "72657604-0051-4562-b587-1728f96a2c59",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.find must return the added Customer by it name",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Customer.find must return the added Customer by it name",
                  "timedOut": null,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee23() {\n  var _error, _data, _yield$Customer$find, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee23$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context23.prev = 2;\n          _context23.next = 5;\n          return Customer.find({\n            name: CustomerDocument.name\n          });\n        case 5:\n          _yield$Customer$find = _context23.sent;\n          error = _yield$Customer$find.error;\n          data = _yield$Customer$find.data;\n          _error = error;\n          _data = data;\n          _context23.next = 16;\n          break;\n        case 12:\n          _context23.prev = 12;\n          _context23.t0 = _context23[\"catch\"](2);\n          _error = _context23.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (c) {\n            return c.name === CustomerDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, CustomerDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, _callee23, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "006f3f8d-14aa-4c56-9573-57f5af747250",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.find must return the added Product by it name",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Product.find must return the added Product by it name",
                  "timedOut": null,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee24() {\n  var _error, _data, _yield$Product$find, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee24$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context24.prev = 2;\n          _context24.next = 5;\n          return Product.find({\n            name: ProductDocument.name\n          });\n        case 5:\n          _yield$Product$find = _context24.sent;\n          error = _yield$Product$find.error;\n          data = _yield$Product$find.data;\n          _error = error;\n          _data = data;\n          _context24.next = 16;\n          break;\n        case 12:\n          _context24.prev = 12;\n          _context24.t0 = _context24[\"catch\"](2);\n          _error = _context24.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (p) {\n            return p.name === ProductDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, ProductDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, _callee24, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "d39f1cd3-b696-434a-b71f-93a178eb4d54",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.find must return the added Customer ",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Customer.find must return the added Customer ",
                  "timedOut": null,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee25() {\n  var _error, _data, _yield$Customer$find2, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee25$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context25.prev = 2;\n          _context25.next = 5;\n          return Customer.find();\n        case 5:\n          _yield$Customer$find2 = _context25.sent;\n          error = _yield$Customer$find2.error;\n          data = _yield$Customer$find2.data;\n          _error = error;\n          _data = data;\n          _context25.next = 16;\n          break;\n        case 12:\n          _context25.prev = 12;\n          _context25.t0 = _context25[\"catch\"](2);\n          _error = _context25.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (c) {\n            return c.name === CustomerDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, CustomerDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, _callee25, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "5833c2c1-2114-4654-95a0-55149e43a0b5",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.find must return the added Product ",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Product.find must return the added Product ",
                  "timedOut": null,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee26() {\n  var _error, _data, _yield$Product$find2, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee26$(_context26) {\n    while (1) {\n      switch (_context26.prev = _context26.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context26.prev = 2;\n          _context26.next = 5;\n          return Product.find();\n        case 5:\n          _yield$Product$find2 = _context26.sent;\n          error = _yield$Product$find2.error;\n          data = _yield$Product$find2.data;\n          _error = error;\n          _data = data;\n          _context26.next = 16;\n          break;\n        case 12:\n          _context26.prev = 12;\n          _context26.t0 = _context26[\"catch\"](2);\n          _error = _context26.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (p) {\n            return p.name === ProductDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, ProductDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context26.stop();\n      }\n    }\n  }, _callee26, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "7dffe6dd-b401-4d7f-90cb-00a7444fa10a",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.findById must return the added Customer ",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Customer.findById must return the added Customer ",
                  "timedOut": null,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee27() {\n  var _error, _data, _yield$Customer$findB, error, data;\n  return _regenerator[\"default\"].wrap(function _callee27$(_context27) {\n    while (1) {\n      switch (_context27.prev = _context27.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context27.prev = 2;\n          _context27.next = 5;\n          return Customer.findById(NewCustomerDocument.__id);\n        case 5:\n          _yield$Customer$findB = _context27.sent;\n          error = _yield$Customer$findB.error;\n          data = _yield$Customer$findB.data;\n          _error = error;\n          _data = data;\n          _context27.next = 16;\n          break;\n        case 12:\n          _context27.prev = 12;\n          _context27.t0 = _context27[\"catch\"](2);\n          _error = _context27.t0;\n          _data = null;\n        case 16:\n          _assert[\"default\"].equal(_data.name, CustomerDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 18:\n        case \"end\":\n          return _context27.stop();\n      }\n    }\n  }, _callee27, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "bdb3dedc-e580-45bd-81d2-9fa0681ea6ec",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.findById must return the added Product ",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Product.findById must return the added Product ",
                  "timedOut": null,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee28() {\n  var _error, _data, _yield$Product$findBy, error, data;\n  return _regenerator[\"default\"].wrap(function _callee28$(_context28) {\n    while (1) {\n      switch (_context28.prev = _context28.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context28.prev = 2;\n          _context28.next = 5;\n          return Product.findById(NewProductDocument.__id);\n        case 5:\n          _yield$Product$findBy = _context28.sent;\n          error = _yield$Product$findBy.error;\n          data = _yield$Product$findBy.data;\n          _error = error;\n          _data = data;\n          _context28.next = 16;\n          break;\n        case 12:\n          _context28.prev = 12;\n          _context28.t0 = _context28[\"catch\"](2);\n          _error = _context28.t0;\n          _data = null;\n        case 16:\n          _assert[\"default\"].equal(_data.name, ProductDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 18:\n        case \"end\":\n          return _context28.stop();\n      }\n    }\n  }, _callee28, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "16c9798c-801a-4eb9-9a9a-e6211cb76758",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to edit the added Product",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to edit the added Product",
                  "timedOut": null,
                  "duration": 50,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee29() {\n  var _error, _data, doc, _yield$Product$edit3, error, data;\n  return _regenerator[\"default\"].wrap(function _callee29$(_context29) {\n    while (1) {\n      switch (_context29.prev = _context29.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context29.prev = 3;\n          doc = _objectSpread({}, NewProductDocument);\n          doc.name = 'XC60';\n          _context29.next = 8;\n          return Product.edit(NewProductDocument.__id, doc);\n        case 8:\n          _yield$Product$edit3 = _context29.sent;\n          error = _yield$Product$edit3.error;\n          data = _yield$Product$edit3.data;\n          _error = error;\n          _data = data;\n          _context29.next = 20;\n          break;\n        case 15:\n          _context29.prev = 15;\n          _context29.t0 = _context29[\"catch\"](3);\n          _error = _context29.t0;\n          _data = null;\n          doc = null;\n        case 20:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data.name, doc.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 23:\n        case \"end\":\n          return _context29.stop();\n      }\n    }\n  }, _callee29, null, [[3, 15]]);\n}))();",
                  "err": {},
                  "uuid": "b068b997-796c-4992-816d-b8a35b1d93a2",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to edit the added Customer",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to edit the added Customer",
                  "timedOut": null,
                  "duration": 52,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee30() {\n  var _error, _data, doc, _yield$Customer$edit8, error, data;\n  return _regenerator[\"default\"].wrap(function _callee30$(_context30) {\n    while (1) {\n      switch (_context30.prev = _context30.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context30.prev = 3;\n          doc = _objectSpread({}, NewCustomerDocument);\n          doc.name = 'José Eduardo Almeida';\n          _context30.next = 8;\n          return Customer.edit(NewCustomerDocument.__id, doc);\n        case 8:\n          _yield$Customer$edit8 = _context30.sent;\n          error = _yield$Customer$edit8.error;\n          data = _yield$Customer$edit8.data;\n          _error = error;\n          _data = data;\n          _context30.next = 20;\n          break;\n        case 15:\n          _context30.prev = 15;\n          _context30.t0 = _context30[\"catch\"](3);\n          _error = _context30.t0;\n          _data = null;\n          doc = null;\n        case 20:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data.name, doc.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 23:\n        case \"end\":\n          return _context30.stop();\n      }\n    }\n  }, _callee30, null, [[3, 15]]);\n}))();",
                  "err": {},
                  "uuid": "a3f053ab-a36b-42d7-9717-7299f602cf8e",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to count Customer by name",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to count Customer by name",
                  "timedOut": null,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee31() {\n  var _error, _data, doc, _yield$Customer$count, error, data;\n  return _regenerator[\"default\"].wrap(function _callee31$(_context31) {\n    while (1) {\n      switch (_context31.prev = _context31.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context31.prev = 3;\n          _context31.next = 6;\n          return Customer.count({\n            name: 'José Eduardo Almeida'\n          });\n        case 6:\n          _yield$Customer$count = _context31.sent;\n          error = _yield$Customer$count.error;\n          data = _yield$Customer$count.data;\n          _error = error;\n          _data = data;\n          _context31.next = 18;\n          break;\n        case 13:\n          _context31.prev = 13;\n          _context31.t0 = _context31[\"catch\"](3);\n          _error = _context31.t0;\n          _data = null;\n          doc = null;\n        case 18:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data, 1);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 21:\n        case \"end\":\n          return _context31.stop();\n      }\n    }\n  }, _callee31, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "33e1f17f-fec2-4b3b-86a7-6eedd633d12c",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to count Product by name",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to count Product by name",
                  "timedOut": null,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee32() {\n  var _error, _data, doc, _yield$Product$count, error, data;\n  return _regenerator[\"default\"].wrap(function _callee32$(_context32) {\n    while (1) {\n      switch (_context32.prev = _context32.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context32.prev = 3;\n          _context32.next = 6;\n          return Product.count({\n            name: 'XC60'\n          });\n        case 6:\n          _yield$Product$count = _context32.sent;\n          error = _yield$Product$count.error;\n          data = _yield$Product$count.data;\n          _error = error;\n          _data = data;\n          _context32.next = 18;\n          break;\n        case 13:\n          _context32.prev = 13;\n          _context32.t0 = _context32[\"catch\"](3);\n          _error = _context32.t0;\n          _data = null;\n          doc = null;\n        case 18:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data, 1);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 21:\n        case \"end\":\n          return _context32.stop();\n      }\n    }\n  }, _callee32, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "5653e165-d59e-4c3c-b5c3-7ac89da0b72b",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to count Customer",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to count Customer",
                  "timedOut": null,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee33() {\n  var _error, _data, doc, _yield$Customer$count2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee33$(_context33) {\n    while (1) {\n      switch (_context33.prev = _context33.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context33.prev = 3;\n          _context33.next = 6;\n          return Customer.count();\n        case 6:\n          _yield$Customer$count2 = _context33.sent;\n          error = _yield$Customer$count2.error;\n          data = _yield$Customer$count2.data;\n          _error = error;\n          _data = data;\n          _context33.next = 18;\n          break;\n        case 13:\n          _context33.prev = 13;\n          _context33.t0 = _context33[\"catch\"](3);\n          _error = _context33.t0;\n          _data = null;\n          doc = null;\n        case 18:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data, 1);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 21:\n        case \"end\":\n          return _context33.stop();\n      }\n    }\n  }, _callee33, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "771e493e-2f11-44ed-b3a7-c5657af4c7d1",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to count Product",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to count Product",
                  "timedOut": null,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee34() {\n  var _error, _data, doc, _yield$Product$count2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee34$(_context34) {\n    while (1) {\n      switch (_context34.prev = _context34.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context34.prev = 3;\n          _context34.next = 6;\n          return Product.count();\n        case 6:\n          _yield$Product$count2 = _context34.sent;\n          error = _yield$Product$count2.error;\n          data = _yield$Product$count2.data;\n          _error = error;\n          _data = data;\n          _context34.next = 18;\n          break;\n        case 13:\n          _context34.prev = 13;\n          _context34.t0 = _context34[\"catch\"](3);\n          _error = _context34.t0;\n          _data = null;\n          doc = null;\n        case 18:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data, 1);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 21:\n        case \"end\":\n          return _context34.stop();\n      }\n    }\n  }, _callee34, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "9e25010f-5b68-4510-a1a7-96b6bf9d974d",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to delete the added Product",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to delete the added Product",
                  "timedOut": null,
                  "duration": 53,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee35() {\n  var _error, _data, doc, _yield$Product$delete, error, data;\n  return _regenerator[\"default\"].wrap(function _callee35$(_context35) {\n    while (1) {\n      switch (_context35.prev = _context35.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context35.prev = 3;\n          _context35.next = 6;\n          return Product[\"delete\"](NewProductDocument.__id);\n        case 6:\n          _yield$Product$delete = _context35.sent;\n          error = _yield$Product$delete.error;\n          data = _yield$Product$delete.data;\n          _error = error;\n          _data = data;\n          _context35.next = 18;\n          break;\n        case 13:\n          _context35.prev = 13;\n          _context35.t0 = _context35[\"catch\"](3);\n          _error = _context35.t0;\n          _data = null;\n          doc = null;\n        case 18:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data.__id, NewProductDocument.__id);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 21:\n        case \"end\":\n          return _context35.stop();\n      }\n    }\n  }, _callee35, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "e2a34ba9-9a83-4e79-82a1-ec546cc77328",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to delete the added Customer",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to delete the added Customer",
                  "timedOut": null,
                  "duration": 44,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee36() {\n  var _error, _data, doc, _yield$Customer$delet, error, data;\n  return _regenerator[\"default\"].wrap(function _callee36$(_context36) {\n    while (1) {\n      switch (_context36.prev = _context36.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context36.prev = 3;\n          _context36.next = 6;\n          return Customer[\"delete\"](NewCustomerDocument.__id);\n        case 6:\n          _yield$Customer$delet = _context36.sent;\n          error = _yield$Customer$delet.error;\n          data = _yield$Customer$delet.data;\n          _error = error;\n          _data = data;\n          _context36.next = 18;\n          break;\n        case 13:\n          _context36.prev = 13;\n          _context36.t0 = _context36[\"catch\"](3);\n          _error = _context36.t0;\n          _data = null;\n          doc = null;\n        case 18:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data.__id, NewCustomerDocument.__id);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 21:\n        case \"end\":\n          return _context36.stop();\n      }\n    }\n  }, _callee36, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "6bc0501a-3722-480d-a45a-3ad71a08d0ab",
                  "parentUUID": "eefdbf64-a7b4-432a-b07a-b2c3aa36a81c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4dc9d1fc-9904-419d-9e97-aa424bc0a17a",
                "f6403ee2-95ca-445a-82e5-0bc6178cb17a",
                "68c154f6-2b2c-41c8-9b9f-d57ac1e04808",
                "96ccea63-7117-42a7-843c-1cfa69b8e6af",
                "7d39d25a-4dd0-4183-9799-b4422547fbb6",
                "2b290e56-5d38-4be7-819f-72207bbc4739",
                "9124c281-7452-49bd-9be4-abdb4e0712fd",
                "23e8dd03-41a6-4246-83c7-930270f1b230",
                "307001aa-0cc5-4f1f-b590-627751206510",
                "72657604-0051-4562-b587-1728f96a2c59",
                "006f3f8d-14aa-4c56-9573-57f5af747250",
                "d39f1cd3-b696-434a-b71f-93a178eb4d54",
                "5833c2c1-2114-4654-95a0-55149e43a0b5",
                "7dffe6dd-b401-4d7f-90cb-00a7444fa10a",
                "bdb3dedc-e580-45bd-81d2-9fa0681ea6ec",
                "16c9798c-801a-4eb9-9a9a-e6211cb76758",
                "b068b997-796c-4992-816d-b8a35b1d93a2",
                "a3f053ab-a36b-42d7-9717-7299f602cf8e",
                "33e1f17f-fec2-4b3b-86a7-6eedd633d12c",
                "5653e165-d59e-4c3c-b5c3-7ac89da0b72b",
                "771e493e-2f11-44ed-b3a7-c5657af4c7d1",
                "9e25010f-5b68-4510-a1a7-96b6bf9d974d",
                "e2a34ba9-9a83-4e79-82a1-ec546cc77328",
                "6bc0501a-3722-480d-a45a-3ad71a08d0ab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 792,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ab0817f4-03e7-42f9-9118-914b6387e7f3",
              "title": "Check data event changes",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Product.add() must triggers add event",
                  "fullTitle": "#--- DataEntity Class Test Suite Check data event changes Product.add() must triggers add event",
                  "timedOut": null,
                  "duration": 54,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee37() {\n  var _error, _data, listener, _yield$Product$add4, error, data;\n  return _regenerator[\"default\"].wrap(function _callee37$(_context37) {\n    while (1) {\n      switch (_context37.prev = _context37.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          listener = Product.on('add', function (eventObj) {\n            var error = eventObj.error,\n                document = eventObj.document,\n                foundation = eventObj.foundation,\n                data = eventObj.data;\n            _assert[\"default\"].equal(_error, null);\n            _assert[\"default\"].equal(error, null);\n            _assert[\"default\"].equal(data.name, ProductDocument.name);\n            Product.stopListenTo(listener);\n            if (_error) {\n              done(_error);\n            } else {\n              NewProductDocument = _data;\n              done();\n            }\n          });\n          _context37.prev = 3;\n          _context37.next = 6;\n          return Product.add(ProductDocument);\n        case 6:\n          _yield$Product$add4 = _context37.sent;\n          error = _yield$Product$add4.error;\n          data = _yield$Product$add4.data;\n          _error = error;\n          _data = data;\n          _context37.next = 17;\n          break;\n        case 13:\n          _context37.prev = 13;\n          _context37.t0 = _context37[\"catch\"](3);\n          _error = _context37.t0;\n          _data = null;\n        case 17:\n        case \"end\":\n          return _context37.stop();\n      }\n    }\n  }, _callee37, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "2f375f4a-e344-4170-9e57-c13fae975415",
                  "parentUUID": "ab0817f4-03e7-42f9-9118-914b6387e7f3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.edit() must triggers edit event",
                  "fullTitle": "#--- DataEntity Class Test Suite Check data event changes Product.edit() must triggers edit event",
                  "timedOut": null,
                  "duration": 98,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee39() {\n  var _error, _data, listener, add, _yield$Product$edit4, error, data;\n  return _regenerator[\"default\"].wrap(function _callee39$(_context39) {\n    while (1) {\n      switch (_context39.prev = _context39.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          listener = Product.on('edit', function () {\n            var _ref39 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee38(eventObj) {\n              var error, document, foundation, data;\n              return _regenerator[\"default\"].wrap(function _callee38$(_context38) {\n                while (1) {\n                  switch (_context38.prev = _context38.next) {\n                    case 0:\n                      error = eventObj.error, document = eventObj.document, foundation = eventObj.foundation, data = eventObj.data;\n                      _assert[\"default\"].equal(_error, null);\n                      _assert[\"default\"].equal(error, null);\n                      _assert[\"default\"].equal(data.name, 'XC90 T6');\n                      Product.stopListenTo(listener);\n                      _context38.next = 7;\n                      return Product[\"delete\"](data.__id);\n                    case 7:\n                      if (_error) {\n                        done(_error);\n                      } else {\n                        NewProductDocument = _data;\n                        done();\n                      }\n                    case 8:\n                    case \"end\":\n                      return _context38.stop();\n                  }\n                }\n              }, _callee38);\n            }));\n            return function (_x) {\n              return _ref39.apply(this, arguments);\n            };\n          }());\n          _context39.prev = 3;\n          _context39.next = 6;\n          return Product.add(ProductDocument);\n        case 6:\n          add = _context39.sent;\n          add.data.name = 'XC90 T6';\n          _context39.next = 10;\n          return Product.edit(add.data.__id, add.data);\n        case 10:\n          _yield$Product$edit4 = _context39.sent;\n          error = _yield$Product$edit4.error;\n          data = _yield$Product$edit4.data;\n          _error = error;\n          _data = data;\n          _context39.next = 21;\n          break;\n        case 17:\n          _context39.prev = 17;\n          _context39.t0 = _context39[\"catch\"](3);\n          _error = _context39.t0;\n          _data = null;\n        case 21:\n        case \"end\":\n          return _context39.stop();\n      }\n    }\n  }, _callee39, null, [[3, 17]]);\n}))();",
                  "err": {},
                  "uuid": "13930b51-5b6d-48fb-b05e-eb6d411bc182",
                  "parentUUID": "ab0817f4-03e7-42f9-9118-914b6387e7f3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2f375f4a-e344-4170-9e57-c13fae975415",
                "13930b51-5b6d-48fb-b05e-eb6d411bc182"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 152,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "13e539cd-b0ab-4813-9d5d-d3ac2f45f041"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 136,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "docs/reports/unit-testing",
        "overwrite": false,
        "reportTitle": "My Custom Title",
        "showPassed": true,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}