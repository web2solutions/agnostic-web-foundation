{
  "stats": {
    "suites": 5,
    "tests": 74,
    "passes": 74,
    "pending": 0,
    "failures": 0,
    "start": "2021-02-24T04:41:11.111Z",
    "end": "2021-02-24T04:41:14.268Z",
    "duration": 3157,
    "testsRegistered": 74,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "79119b57-e52c-452b-9be3-75d4cea63a6c",
      "title": "",
      "fullFile": "cypress/integration/DataEntity_spec.js",
      "file": "cypress/integration/DataEntity_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "caf6f104-80a1-43b7-aafb-0c5c53c9ca5b",
          "title": "#--- DataEntity Class Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "We must be able to delete database",
              "fullTitle": "#--- DataEntity Class Test Suite We must be able to delete database",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee40() {\n  var _error;\n  return _regenerator[\"default\"].wrap(function _callee40$(_context40) {\n    while (1) {\n      switch (_context40.prev = _context40.next) {\n        case 0:\n          _error = null;\n          _context40.prev = 1;\n          _context40.next = 4;\n          return foundation.localDatabaseTransport[\"delete\"]();\n        case 4:\n          _context40.next = 9;\n          break;\n        case 6:\n          _context40.prev = 6;\n          _context40.t0 = _context40[\"catch\"](1);\n          _error = _context40.t0;\n        case 9:\n          _assert[\"default\"].equal(_error, null);\n          done();\n        case 11:\n        case \"end\":\n          return _context40.stop();\n      }\n    }\n  }, _callee40, null, [[1, 6]]);\n}))();",
              "err": {},
              "uuid": "c4b21da0-e904-4775-abc9-36df9d4e60b1",
              "parentUUID": "caf6f104-80a1-43b7-aafb-0c5c53c9ca5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
              "title": "Check class integrity",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "DataEntity must have a constructor",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity DataEntity must have a constructor",
                  "timedOut": null,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(DataEntity.constructor, Function);\ndone();",
                  "err": {},
                  "uuid": "0d87c4bf-ca9a-4237-a758-1ff4e14c57bd",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Using Product DataEntity API imported from foundation DataEntity API must works",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Using Product DataEntity API imported from foundation DataEntity API must works",
                  "timedOut": null,
                  "duration": 74,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2() {\n  return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          foundation.importDataEntity({\n            entity: 'Product',\n            dataEntity: new MyCustomizedDataEntity({\n              foundation: foundation,\n              entity: 'Product',\n              schema: productSchema\n            })\n          });\n          _context2.next = 3;\n          return foundation.start();\n        case 3:\n          Product = foundation.data.Product;\n          _assert[\"default\"].equal(Product !== null, true);\n          done();\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n}))();",
                  "err": {},
                  "uuid": "19da1f11-b8b0-4865-9b97-9c4e81dd77e2",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer must be instance of DataEntity",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer must be instance of DataEntity",
                  "timedOut": null,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(Customer instanceof DataEntity, true);\ndone();",
                  "err": {},
                  "uuid": "04adb209-83c4-4ce8-815b-1195a63ca82a",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.entity must be equal to \"Customer\"",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.entity must be equal to \"Customer\"",
                  "timedOut": null,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(Customer.entity === 'Customer', true);\ndone();",
                  "err": {},
                  "uuid": "062f817c-85b8-4204-be30-deedcb1b2eb7",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.entity is getter only",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.entity is getter only",
                  "timedOut": null,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  Customer.entity = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(Customer.entity, 222222);\ndone();",
                  "err": {},
                  "uuid": "079eed23-78aa-4950-8dde-73b603ddaea5",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.strategy is getter only",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.strategy is getter only",
                  "timedOut": null,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  Customer.entity = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(Customer.strategy, 222222);\ndone();",
                  "err": {},
                  "uuid": "df8df99f-ed7b-4b26-a477-e69bd94c2310",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.strategy must be \"offline\"",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.strategy must be \"offline\"",
                  "timedOut": null,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal(Customer.strategy, 'offline');\ndone();",
                  "err": {},
                  "uuid": "72177c05-823a-40c9-b324-2146c9519cf3",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.schema is getter only",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.schema is getter only",
                  "timedOut": null,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  Customer.schema = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(Customer.schema, 222222);\ndone();",
                  "err": {},
                  "uuid": "f68ea0ee-0b3f-4607-977c-637a8b595a8b",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.Model() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.Model() must be a function",
                  "timedOut": null,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.Model), 'function');\ndone();",
                  "err": {},
                  "uuid": "7430fb97-fa3d-41c9-b95a-9985352c64e4",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.add() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.add() must be a function",
                  "timedOut": null,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.add), 'function');\ndone();",
                  "err": {},
                  "uuid": "1151cf5c-9838-4ea1-b27e-cd7f1e4cafc8",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.add() without parameter must returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.add() without parameter must returns an error",
                  "timedOut": null,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee3() {\n  var _error, _data, _yield$Customer$add, error, data;\n  return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context3.prev = 2;\n          _context3.next = 5;\n          return Customer.add();\n        case 5:\n          _yield$Customer$add = _context3.sent;\n          error = _yield$Customer$add.error;\n          data = _yield$Customer$add.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context3.next = 15;\n          break;\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](2);\n          _error = _context3.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'You must pass a valid JSON document as parameter to DataEntity.add() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "345c66f7-601d-48bc-b900-7a9e066a748b",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.add({}) with empty object must returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.add({}) with empty object must returns an error",
                  "timedOut": null,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee4() {\n  var _error, _data, _yield$Customer$add2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context4.prev = 2;\n          _context4.next = 5;\n          return Customer.add({});\n        case 5:\n          _yield$Customer$add2 = _context4.sent;\n          error = _yield$Customer$add2.error;\n          data = _yield$Customer$add2.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context4.next = 15;\n          break;\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](2);\n          _error = _context4.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          done();\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "35fb1f91-5bcf-4ce7-a399-92917270e9f3",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.add with missing a required param must returns an error - invalid",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.add with missing a required param must returns an error - invalid",
                  "timedOut": null,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee5() {\n  var _error, _data, invalid, _yield$Customer$add3, error, data;\n  return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          invalid = false;\n          _context5.prev = 3;\n          _context5.next = 6;\n          return Customer.add({\n            name: 'test'\n          });\n        case 6:\n          _yield$Customer$add3 = _context5.sent;\n          error = _yield$Customer$add3.error;\n          data = _yield$Customer$add3.data;\n          if (error) {\n            _error = error;\n            invalid = true;\n          } else {\n            _data = data;\n            invalid = false;\n          }\n          _context5.next = 17;\n          break;\n        case 12:\n          _context5.prev = 12;\n          _context5.t0 = _context5[\"catch\"](3);\n          _error = _context5.t0;\n          _data = null;\n          invalid = true;\n        case 17:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(invalid, true);\n          done();\n        case 21:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _callee5, null, [[3, 12]]);\n}))();",
                  "err": {},
                  "uuid": "29f4e9af-c34b-4f77-aa0a-0d1f03b5cf9f",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit() without parameter must returns an  validation error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit() without parameter must returns an  validation error",
                  "timedOut": null,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee6() {\n  var _error, _data, _yield$Customer$edit, error, data;\n  return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context6.prev = 2;\n          _context6.next = 5;\n          return Customer.edit();\n        case 5:\n          _yield$Customer$edit = _context6.sent;\n          error = _yield$Customer$edit.error;\n          data = _yield$Customer$edit.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context6.next = 15;\n          break;\n        case 11:\n          _context6.prev = 11;\n          _context6.t0 = _context6[\"catch\"](2);\n          _error = _context6.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'You must pass a valid JSON document as parameter to DataEntity.edit() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "21d4b571-d2b8-4a23-9a7a-17fa9e2f8197",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit(null) returns an  validation error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit(null) returns an  validation error",
                  "timedOut": null,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee7() {\n  var _error, _data, _yield$Customer$edit2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context7.prev = 2;\n          _context7.next = 5;\n          return Customer.edit(null);\n        case 5:\n          _yield$Customer$edit2 = _context7.sent;\n          error = _yield$Customer$edit2.error;\n          data = _yield$Customer$edit2.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context7.next = 15;\n          break;\n        case 11:\n          _context7.prev = 11;\n          _context7.t0 = _context7[\"catch\"](2);\n          _error = _context7.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'You must pass a valid JSON document as parameter to DataEntity.edit() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _callee7, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "e7ccadc1-fd03-4d23-b3fd-bb9cec933371",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit(null, {a: 1}) returns an validation error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit(null, {a: 1}) returns an validation error",
                  "timedOut": null,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee8() {\n  var _error, _data, _yield$Customer$edit3, error, data;\n  return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context8.prev = 2;\n          _context8.next = 5;\n          return Customer.edit(null, {\n            a: 1\n          });\n        case 5:\n          _yield$Customer$edit3 = _context8.sent;\n          error = _yield$Customer$edit3.error;\n          data = _yield$Customer$edit3.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context8.next = 15;\n          break;\n        case 11:\n          _context8.prev = 11;\n          _context8.t0 = _context8[\"catch\"](2);\n          _error = _context8.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'You must pass a valid primary key value as parameter to DataEntity.edit() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _callee8, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "ea16d75f-05b5-4450-b069-1f0d1ccfbba5",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit(1, {a: 1}) empty document returns an validation error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit(1, {a: 1}) empty document returns an validation error",
                  "timedOut": null,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee9() {\n  var _error, _data, _yield$Customer$edit4, error, data;\n  return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context9.prev = 2;\n          _context9.next = 5;\n          return Customer.edit(1, {\n            a: 1\n          });\n        case 5:\n          _yield$Customer$edit4 = _context9.sent;\n          error = _yield$Customer$edit4.error;\n          data = _yield$Customer$edit4.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context9.next = 15;\n          break;\n        case 11:\n          _context9.prev = 11;\n          _context9.t0 = _context9[\"catch\"](2);\n          _error = _context9.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'Document must have doc.__id (Integer) when calling DataEntity.edit() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _callee9, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "a48a88c8-7520-44a1-bfdb-350a9f407acc",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit(1, {__id: 1}) empty document returns an validation error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit(1, {__id: 1}) empty document returns an validation error",
                  "timedOut": null,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee10() {\n  var _error, _data, _yield$Customer$edit5, error, data;\n  return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context10.prev = 2;\n          _context10.next = 5;\n          return Customer.edit(1, {\n            __id: 1\n          });\n        case 5:\n          _yield$Customer$edit5 = _context10.sent;\n          error = _yield$Customer$edit5.error;\n          data = _yield$Customer$edit5.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context10.next = 15;\n          break;\n        case 11:\n          _context10.prev = 11;\n          _context10.t0 = _context10[\"catch\"](2);\n          _error = _context10.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'Document must have doc._id (ObjectID) when calling DataEntity.edit() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _callee10, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "192b7e3d-7c18-4a12-960b-0c5099fb50d1",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit(1, {__id: 1, _id: \"dffgdfgdfg\"}) empty document returns an validation error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit(1, {__id: 1, _id: \"dffgdfgdfg\"}) empty document returns an validation error",
                  "timedOut": null,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee11() {\n  var _error, _data, _yield$Customer$edit6, error, data;\n  return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context11.prev = 2;\n          _context11.next = 5;\n          return Customer.edit(1, {\n            __id: 1,\n            _id: 'dffgdfgdfg'\n          });\n        case 5:\n          _yield$Customer$edit6 = _context11.sent;\n          error = _yield$Customer$edit6.error;\n          data = _yield$Customer$edit6.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context11.next = 15;\n          break;\n        case 11:\n          _context11.prev = 11;\n          _context11.t0 = _context11[\"catch\"](2);\n          _error = _context11.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          done();\n        case 18:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _callee11, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "db135157-6770-4d35-86cd-5e7e7c9906c1",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.edit() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.edit() must be a function",
                  "timedOut": null,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.edit), 'function');\ndone();",
                  "err": {},
                  "uuid": "37a52a1d-fe24-4274-a0cd-f0c621a4a1d0",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.delete() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.delete() must be a function",
                  "timedOut": null,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer[\"delete\"]), 'function');\ndone();",
                  "err": {},
                  "uuid": "b753d333-6345-47ff-91ad-1f6267cf89a4",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.findById() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.findById() must be a function",
                  "timedOut": null,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.findById), 'function');\ndone();",
                  "err": {},
                  "uuid": "71d25ec5-16c1-4ae9-960e-4d7e0fa62596",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.findById() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.findById() must be a function",
                  "timedOut": null,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.findById), 'function');\ndone();",
                  "err": {},
                  "uuid": "4debae54-068f-4350-9a90-d83dea059515",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.findAll() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.findAll() must be a function",
                  "timedOut": null,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.findAll), 'function');\ndone();",
                  "err": {},
                  "uuid": "d6882282-4dfc-4cfe-a8f5-20b010ba39d5",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.count() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Customer.count() must be a function",
                  "timedOut": null,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Customer.count), 'function');\ndone();",
                  "err": {},
                  "uuid": "03cc1a10-1170-4c9f-9c77-662461c466c1",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product must be instance of DataEntity",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product must be instance of DataEntity",
                  "timedOut": null,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(Product instanceof DataEntity, true);\ndone();",
                  "err": {},
                  "uuid": "d8e2032d-1b37-48e4-b031-a4737f7f10e7",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.entity must be equal to \"Product\"",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.entity must be equal to \"Product\"",
                  "timedOut": null,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal(Product.entity === 'Product', true);\ndone();",
                  "err": {},
                  "uuid": "6bef5f92-d4a0-42d5-94ef-7a9b8f271677",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.entity is getter only",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.entity is getter only",
                  "timedOut": null,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  Product.entity = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(Product.entity, 222222);\ndone();",
                  "err": {},
                  "uuid": "810b704c-694d-441d-b102-b9bceefbdf5b",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.strategy is getter only",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.strategy is getter only",
                  "timedOut": null,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  Product.entity = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(Product.strategy, 222222);\ndone();",
                  "err": {},
                  "uuid": "c23fda66-82d5-4ca5-86dd-4ea60d867a35",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.strategy must be \"offline\"",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.strategy must be \"offline\"",
                  "timedOut": null,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal(Product.strategy, 'offline');\ndone();",
                  "err": {},
                  "uuid": "bd6b7860-d155-4973-9f5c-a7d4d406b210",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.schema is getter only",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.schema is getter only",
                  "timedOut": null,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\ntry {\n  Product.schema = 222222;\n} catch (e) {\n  error = e;\n}\n_assert[\"default\"].equal(error !== null, true);\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(error) === 'object', true);\n_assert[\"default\"].notEqual(Product.schema, 222222);\ndone();",
                  "err": {},
                  "uuid": "08cd055a-0bdc-424c-a86a-7c8229d6e5e2",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.Model() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.Model() must be a function",
                  "timedOut": null,
                  "duration": 35,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.Model), 'function');\ndone();",
                  "err": {},
                  "uuid": "26eaac74-9c5b-4e14-9879-2c1479c6643f",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.add() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.add() must be a function",
                  "timedOut": null,
                  "duration": 33,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.add), 'function');\ndone();",
                  "err": {},
                  "uuid": "e69c15c6-7869-4bc9-a047-95d5f189999e",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Product.add() without parameter must returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Product.add() without parameter must returns an error",
                  "timedOut": null,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee12() {\n  var _error, _data, _yield$Product$add, error, data;\n  return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context12.prev = 2;\n          _context12.next = 5;\n          return Product.add();\n        case 5:\n          _yield$Product$add = _context12.sent;\n          error = _yield$Product$add.error;\n          data = _yield$Product$add.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context12.next = 15;\n          break;\n        case 11:\n          _context12.prev = 11;\n          _context12.t0 = _context12[\"catch\"](2);\n          _error = _context12.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'You must pass a valid JSON document as parameter to DataEntity.add() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _callee12, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "2f0a3d13-90ae-47d1-ac17-a780b0d1d43b",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Product.add({}) with empty object must returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Product.add({}) with empty object must returns an error",
                  "timedOut": null,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee13() {\n  var _error, _data, _yield$Product$add2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context13.prev = 2;\n          _context13.next = 5;\n          return Product.add({});\n        case 5:\n          _yield$Product$add2 = _context13.sent;\n          error = _yield$Product$add2.error;\n          data = _yield$Product$add2.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context13.next = 15;\n          break;\n        case 11:\n          _context13.prev = 11;\n          _context13.t0 = _context13[\"catch\"](2);\n          _error = _context13.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          done();\n        case 18:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _callee13, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "44c784cc-a11d-4f64-8f86-6f64901e245c",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Product.edit() without parameter must returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Product.edit() without parameter must returns an error",
                  "timedOut": null,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee14() {\n  var _error, _data, _yield$Product$edit, error, data;\n  return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context14.prev = 2;\n          _context14.next = 5;\n          return Product.edit();\n        case 5:\n          _yield$Product$edit = _context14.sent;\n          error = _yield$Product$edit.error;\n          data = _yield$Product$edit.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context14.next = 15;\n          break;\n        case 11:\n          _context14.prev = 11;\n          _context14.t0 = _context14[\"catch\"](2);\n          _error = _context14.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          _assert[\"default\"].equal(_error, 'You must pass a valid JSON document as parameter to DataEntity.edit() method');\n          done();\n        case 19:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _callee14, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "35bd2d03-0254-455f-94f3-a1195a5e5217",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Customer.edit(null) returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Customer.edit(null) returns an error",
                  "timedOut": null,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee15() {\n  var _error, _data, _yield$Customer$edit7, error, data;\n  return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context15.prev = 2;\n          _context15.next = 5;\n          return Customer.edit(null);\n        case 5:\n          _yield$Customer$edit7 = _context15.sent;\n          error = _yield$Customer$edit7.error;\n          data = _yield$Customer$edit7.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context15.next = 15;\n          break;\n        case 11:\n          _context15.prev = 11;\n          _context15.t0 = _context15[\"catch\"](2);\n          _error = _context15.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          done();\n        case 18:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _callee15, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "7a272fea-0b2f-4980-9fa0-f6e92e9fa063",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Calling Product.edit(1, {}) empty document returns an error",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Calling Product.edit(1, {}) empty document returns an error",
                  "timedOut": null,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee16() {\n  var _error, _data, _yield$Product$edit2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context16.prev = 2;\n          _context16.next = 5;\n          return Product.edit(1, {});\n        case 5:\n          _yield$Product$edit2 = _context16.sent;\n          error = _yield$Product$edit2.error;\n          data = _yield$Product$edit2.data;\n          if (error) {\n            _error = error;\n          } else {\n            _data = data;\n          }\n          _context16.next = 15;\n          break;\n        case 11:\n          _context16.prev = 11;\n          _context16.t0 = _context16[\"catch\"](2);\n          _error = _context16.t0;\n          _data = null;\n        case 15:\n          _assert[\"default\"].notEqual(_error, null);\n          _assert[\"default\"].equal(_data, null);\n          done();\n        case 18:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _callee16, null, [[2, 11]]);\n}))();",
                  "err": {},
                  "uuid": "c9ee65df-d381-407e-ad82-559b9c5aa6f7",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.edit() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.edit() must be a function",
                  "timedOut": null,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.edit), 'function');\ndone();",
                  "err": {},
                  "uuid": "9e6dddaf-a7bb-4e7f-9b3b-22453796a8f9",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.delete() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.delete() must be a function",
                  "timedOut": null,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product[\"delete\"]), 'function');\ndone();",
                  "err": {},
                  "uuid": "804da01f-9177-4c59-b252-c1da99540bbd",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.findById() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.findById() must be a function",
                  "timedOut": null,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.findById), 'function');\ndone();",
                  "err": {},
                  "uuid": "07a33639-e071-45c3-b738-921222e8f02d",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.findById() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.findById() must be a function",
                  "timedOut": null,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.findById), 'function');\ndone();",
                  "err": {},
                  "uuid": "06de99eb-acea-4062-b09c-8429722ae804",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.findAll() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.findAll() must be a function",
                  "timedOut": null,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.findAll), 'function');\ndone();",
                  "err": {},
                  "uuid": "a2974540-d8d3-415d-b94b-1561caa2a6e8",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.count() must be a function",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class integrity Product.count() must be a function",
                  "timedOut": null,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = null;\n_assert[\"default\"].equal((0, _typeof2[\"default\"])(Product.count), 'function');\ndone();",
                  "err": {},
                  "uuid": "77c6cf9c-1042-4048-8b0e-e17dc17bacd3",
                  "parentUUID": "9bb44c8f-1967-488a-a479-c0c3c27c4f7f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0d87c4bf-ca9a-4237-a758-1ff4e14c57bd",
                "19da1f11-b8b0-4865-9b97-9c4e81dd77e2",
                "04adb209-83c4-4ce8-815b-1195a63ca82a",
                "062f817c-85b8-4204-be30-deedcb1b2eb7",
                "079eed23-78aa-4950-8dde-73b603ddaea5",
                "df8df99f-ed7b-4b26-a477-e69bd94c2310",
                "72177c05-823a-40c9-b324-2146c9519cf3",
                "f68ea0ee-0b3f-4607-977c-637a8b595a8b",
                "7430fb97-fa3d-41c9-b95a-9985352c64e4",
                "1151cf5c-9838-4ea1-b27e-cd7f1e4cafc8",
                "345c66f7-601d-48bc-b900-7a9e066a748b",
                "35fb1f91-5bcf-4ce7-a399-92917270e9f3",
                "29f4e9af-c34b-4f77-aa0a-0d1f03b5cf9f",
                "21d4b571-d2b8-4a23-9a7a-17fa9e2f8197",
                "e7ccadc1-fd03-4d23-b3fd-bb9cec933371",
                "ea16d75f-05b5-4450-b069-1f0d1ccfbba5",
                "a48a88c8-7520-44a1-bfdb-350a9f407acc",
                "192b7e3d-7c18-4a12-960b-0c5099fb50d1",
                "db135157-6770-4d35-86cd-5e7e7c9906c1",
                "37a52a1d-fe24-4274-a0cd-f0c621a4a1d0",
                "b753d333-6345-47ff-91ad-1f6267cf89a4",
                "71d25ec5-16c1-4ae9-960e-4d7e0fa62596",
                "4debae54-068f-4350-9a90-d83dea059515",
                "d6882282-4dfc-4cfe-a8f5-20b010ba39d5",
                "03cc1a10-1170-4c9f-9c77-662461c466c1",
                "d8e2032d-1b37-48e4-b031-a4737f7f10e7",
                "6bef5f92-d4a0-42d5-94ef-7a9b8f271677",
                "810b704c-694d-441d-b102-b9bceefbdf5b",
                "c23fda66-82d5-4ca5-86dd-4ea60d867a35",
                "bd6b7860-d155-4973-9f5c-a7d4d406b210",
                "08cd055a-0bdc-424c-a86a-7c8229d6e5e2",
                "26eaac74-9c5b-4e14-9879-2c1479c6643f",
                "e69c15c6-7869-4bc9-a047-95d5f189999e",
                "2f0a3d13-90ae-47d1-ac17-a780b0d1d43b",
                "44c784cc-a11d-4f64-8f86-6f64901e245c",
                "35bd2d03-0254-455f-94f3-a1195a5e5217",
                "7a272fea-0b2f-4980-9fa0-f6e92e9fa063",
                "c9ee65df-d381-407e-ad82-559b9c5aa6f7",
                "9e6dddaf-a7bb-4e7f-9b3b-22453796a8f9",
                "804da01f-9177-4c59-b252-c1da99540bbd",
                "07a33639-e071-45c3-b738-921222e8f02d",
                "06de99eb-acea-4062-b09c-8429722ae804",
                "a2974540-d8d3-415d-b94b-1561caa2a6e8",
                "77c6cf9c-1042-4048-8b0e-e17dc17bacd3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 838,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b9c97985-98c1-40b4-adbf-f72fbbe509cc",
              "title": "Check data schema implementation",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Check model validation passing an invalid document should shall not to be validated",
                  "fullTitle": "#--- DataEntity Class Test Suite Check data schema implementation Check model validation passing an invalid document should shall not to be validated",
                  "timedOut": null,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var invalid = null;\nvar model = new Product.Model({\n  name: 'My Product'\n}, productSchema);\ninvalid = model.isNotValid();\n_assert[\"default\"].equal(!!invalid, true);",
                  "err": {},
                  "uuid": "abbb1408-c3ea-471c-9597-847f7b7b306d",
                  "parentUUID": "b9c97985-98c1-40b4-adbf-f72fbbe509cc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check model validation passing a valid document should shall to be validated",
                  "fullTitle": "#--- DataEntity Class Test Suite Check data schema implementation Check model validation passing a valid document should shall to be validated",
                  "timedOut": null,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var invalid = null;\nvar model = new Product.Model({\n  name: 'My Product',\n  vendor: 'The Vendor',\n  price: 10\n}, productSchema);\ninvalid = model.isNotValid();\n_assert[\"default\"].equal(!!invalid, false);",
                  "err": {},
                  "uuid": "40dd3dc0-029c-4f07-81e7-a6f16d39993e",
                  "parentUUID": "b9c97985-98c1-40b4-adbf-f72fbbe509cc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Testing schema.validate method. product.price must be greater than 0",
                  "fullTitle": "#--- DataEntity Class Test Suite Check data schema implementation Testing schema.validate method. product.price must be greater than 0",
                  "timedOut": null,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var invalid = null;\nvar model = new Product.Model({\n  name: 'My Product',\n  vendor: 'The Vendor',\n  price: 0\n}, productSchema);\ninvalid = model.isNotValid();\n_assert[\"default\"].equal(!!invalid, true);",
                  "err": {},
                  "uuid": "fd5cb925-706f-445e-b25f-47f32c192852",
                  "parentUUID": "b9c97985-98c1-40b4-adbf-f72fbbe509cc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "abbb1408-c3ea-471c-9597-847f7b7b306d",
                "40dd3dc0-029c-4f07-81e7-a6f16d39993e",
                "fd5cb925-706f-445e-b25f-47f32c192852"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 55,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "adf2051c-30b7-4244-99df-fb632ec5988c",
              "title": "Check class usage",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "We must be able to add new Customer",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to add new Customer",
                  "timedOut": null,
                  "duration": 56,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee17() {\n  var _error, _data, _yield$Customer$add4, error, data;\n  return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context17.prev = 2;\n          _context17.next = 5;\n          return Customer.add(CustomerDocument);\n        case 5:\n          _yield$Customer$add4 = _context17.sent;\n          error = _yield$Customer$add4.error;\n          data = _yield$Customer$add4.data;\n          _error = error;\n          _data = data;\n          _context17.next = 16;\n          break;\n        case 12:\n          _context17.prev = 12;\n          _context17.t0 = _context17[\"catch\"](2);\n          _error = _context17.t0;\n          _data = null;\n        case 16:\n          _assert[\"default\"].equal(_error, null);\n          if (_error) {\n            done(_error);\n          } else {\n            NewCustomerDocument = _data;\n            done();\n          }\n        case 18:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _callee17, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "9badfa4f-4987-4fcf-b614-af8b3e9980ac",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "NewCustomerDocument must have valid __id (local ID)",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage NewCustomerDocument must have valid __id (local ID)",
                  "timedOut": null,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal((0, _typeof2[\"default\"])(NewCustomerDocument.__id), 'number');",
                  "err": {},
                  "uuid": "6f92cee0-3013-4bb7-82a6-426ddab9aa04",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "NewCustomerDocument must have valid _id (remote ID)",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage NewCustomerDocument must have valid _id (remote ID)",
                  "timedOut": null,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal((0, _typeof2[\"default\"])(NewCustomerDocument._id), 'string');",
                  "err": {},
                  "uuid": "dc3661fc-ddff-4190-afcc-c29c37b1fdb3",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to add new Product",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to add new Product",
                  "timedOut": null,
                  "duration": 53,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee18() {\n  var _error, _data, _yield$Product$add3, error, data;\n  return _regenerator[\"default\"].wrap(function _callee18$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context18.prev = 2;\n          _context18.next = 5;\n          return Product.add(ProductDocument);\n        case 5:\n          _yield$Product$add3 = _context18.sent;\n          error = _yield$Product$add3.error;\n          data = _yield$Product$add3.data;\n          _error = error;\n          _data = data;\n          _context18.next = 16;\n          break;\n        case 12:\n          _context18.prev = 12;\n          _context18.t0 = _context18[\"catch\"](2);\n          _error = _context18.t0;\n          _data = null;\n        case 16:\n          _assert[\"default\"].equal(_error, null);\n          if (_error) {\n            done(_error);\n          } else {\n            NewProductDocument = _data;\n            done();\n          }\n        case 18:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _callee18, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "790796db-1d09-4baf-a896-4f3604d5ddf7",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "NewProductDocument must have valid __id (local ID)",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage NewProductDocument must have valid __id (local ID)",
                  "timedOut": null,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal((0, _typeof2[\"default\"])(NewProductDocument.__id), 'number');",
                  "err": {},
                  "uuid": "682b1f6a-a212-449f-afd0-20f3cb49b25a",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "NewProductDocument must have valid _id (remote ID)",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage NewProductDocument must have valid _id (remote ID)",
                  "timedOut": null,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_assert[\"default\"].equal((0, _typeof2[\"default\"])(NewProductDocument._id), 'string');",
                  "err": {},
                  "uuid": "4b5da7a2-336d-41d7-92d7-dabf5487eec8",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.findAll must return the added Customer by it name",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Customer.findAll must return the added Customer by it name",
                  "timedOut": null,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee19() {\n  var _error, _data, _yield$Customer$findA, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee19$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context19.prev = 2;\n          _context19.next = 5;\n          return Customer.findAll({\n            name: CustomerDocument.name\n          });\n        case 5:\n          _yield$Customer$findA = _context19.sent;\n          error = _yield$Customer$findA.error;\n          data = _yield$Customer$findA.data;\n          _error = error;\n          _data = data;\n          _context19.next = 16;\n          break;\n        case 12:\n          _context19.prev = 12;\n          _context19.t0 = _context19[\"catch\"](2);\n          _error = _context19.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (c) {\n            return c.name === CustomerDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, CustomerDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _callee19, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "44d54c6d-51c7-4d29-a44c-938df37b18bd",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.findAll must return the added Product by it name",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Product.findAll must return the added Product by it name",
                  "timedOut": null,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee20() {\n  var _error, _data, _yield$Product$findAl, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee20$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context20.prev = 2;\n          _context20.next = 5;\n          return Product.findAll({\n            name: ProductDocument.name\n          });\n        case 5:\n          _yield$Product$findAl = _context20.sent;\n          error = _yield$Product$findAl.error;\n          data = _yield$Product$findAl.data;\n          _error = error;\n          _data = data;\n          _context20.next = 16;\n          break;\n        case 12:\n          _context20.prev = 12;\n          _context20.t0 = _context20[\"catch\"](2);\n          _error = _context20.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (p) {\n            return p.name === ProductDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, ProductDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _callee20, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "64fac0eb-ed60-4cc7-8fb7-6d6f033f28c2",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.findAll must return the added Customer ",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Customer.findAll must return the added Customer ",
                  "timedOut": null,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee21() {\n  var _error, _data, _yield$Customer$findA2, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee21$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context21.prev = 2;\n          _context21.next = 5;\n          return Customer.findAll();\n        case 5:\n          _yield$Customer$findA2 = _context21.sent;\n          error = _yield$Customer$findA2.error;\n          data = _yield$Customer$findA2.data;\n          _error = error;\n          _data = data;\n          _context21.next = 16;\n          break;\n        case 12:\n          _context21.prev = 12;\n          _context21.t0 = _context21[\"catch\"](2);\n          _error = _context21.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (c) {\n            return c.name === CustomerDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, CustomerDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _callee21, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "f988b6da-787b-427f-a7cc-36c7faaf28f1",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.findAll must return the added Product ",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Product.findAll must return the added Product ",
                  "timedOut": null,
                  "duration": 51,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee22() {\n  var _error, _data, _yield$Product$findAl2, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee22$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context22.prev = 2;\n          _context22.next = 5;\n          return Product.findAll();\n        case 5:\n          _yield$Product$findAl2 = _context22.sent;\n          error = _yield$Product$findAl2.error;\n          data = _yield$Product$findAl2.data;\n          _error = error;\n          _data = data;\n          _context22.next = 16;\n          break;\n        case 12:\n          _context22.prev = 12;\n          _context22.t0 = _context22[\"catch\"](2);\n          _error = _context22.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (p) {\n            return p.name === ProductDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, ProductDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _callee22, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "3f0effeb-e96d-4103-b98e-732be4e02fbe",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.find must return the added Customer by it name",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Customer.find must return the added Customer by it name",
                  "timedOut": null,
                  "duration": 79,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee23() {\n  var _error, _data, _yield$Customer$find, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee23$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context23.prev = 2;\n          _context23.next = 5;\n          return Customer.find({\n            name: CustomerDocument.name\n          });\n        case 5:\n          _yield$Customer$find = _context23.sent;\n          error = _yield$Customer$find.error;\n          data = _yield$Customer$find.data;\n          _error = error;\n          _data = data;\n          _context23.next = 16;\n          break;\n        case 12:\n          _context23.prev = 12;\n          _context23.t0 = _context23[\"catch\"](2);\n          _error = _context23.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (c) {\n            return c.name === CustomerDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, CustomerDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, _callee23, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "817a5d27-7ff5-4504-8123-11d5dbc32acc",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.find must return the added Product by it name",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Product.find must return the added Product by it name",
                  "timedOut": null,
                  "duration": 46,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee24() {\n  var _error, _data, _yield$Product$find, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee24$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context24.prev = 2;\n          _context24.next = 5;\n          return Product.find({\n            name: ProductDocument.name\n          });\n        case 5:\n          _yield$Product$find = _context24.sent;\n          error = _yield$Product$find.error;\n          data = _yield$Product$find.data;\n          _error = error;\n          _data = data;\n          _context24.next = 16;\n          break;\n        case 12:\n          _context24.prev = 12;\n          _context24.t0 = _context24[\"catch\"](2);\n          _error = _context24.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (p) {\n            return p.name === ProductDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, ProductDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, _callee24, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "0ef2f909-c146-4f44-a606-32dabf4d18ac",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.find must return the added Customer ",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Customer.find must return the added Customer ",
                  "timedOut": null,
                  "duration": 54,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee25() {\n  var _error, _data, _yield$Customer$find2, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee25$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context25.prev = 2;\n          _context25.next = 5;\n          return Customer.find();\n        case 5:\n          _yield$Customer$find2 = _context25.sent;\n          error = _yield$Customer$find2.error;\n          data = _yield$Customer$find2.data;\n          _error = error;\n          _data = data;\n          _context25.next = 16;\n          break;\n        case 12:\n          _context25.prev = 12;\n          _context25.t0 = _context25[\"catch\"](2);\n          _error = _context25.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (c) {\n            return c.name === CustomerDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, CustomerDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, _callee25, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "b1667d31-f9bc-4bd8-b06f-26addd4651e8",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.find must return the added Product ",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Product.find must return the added Product ",
                  "timedOut": null,
                  "duration": 49,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee26() {\n  var _error, _data, _yield$Product$find2, error, data, found, doc;\n  return _regenerator[\"default\"].wrap(function _callee26$(_context26) {\n    while (1) {\n      switch (_context26.prev = _context26.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context26.prev = 2;\n          _context26.next = 5;\n          return Product.find();\n        case 5:\n          _yield$Product$find2 = _context26.sent;\n          error = _yield$Product$find2.error;\n          data = _yield$Product$find2.data;\n          _error = error;\n          _data = data;\n          _context26.next = 16;\n          break;\n        case 12:\n          _context26.prev = 12;\n          _context26.t0 = _context26[\"catch\"](2);\n          _error = _context26.t0;\n          _data = null;\n        case 16:\n          found = _data.filter(function (p) {\n            return p.name === ProductDocument.name;\n          });\n          doc = found[0] || {};\n          _assert[\"default\"].equal(doc.name, ProductDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 20:\n        case \"end\":\n          return _context26.stop();\n      }\n    }\n  }, _callee26, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "02423fb6-f7d2-4c0d-bde6-e3625b831533",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Customer.findById must return the added Customer ",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Customer.findById must return the added Customer ",
                  "timedOut": null,
                  "duration": 45,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee27() {\n  var _error, _data, _yield$Customer$findB, error, data;\n  return _regenerator[\"default\"].wrap(function _callee27$(_context27) {\n    while (1) {\n      switch (_context27.prev = _context27.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context27.prev = 2;\n          _context27.next = 5;\n          return Customer.findById(NewCustomerDocument.__id);\n        case 5:\n          _yield$Customer$findB = _context27.sent;\n          error = _yield$Customer$findB.error;\n          data = _yield$Customer$findB.data;\n          _error = error;\n          _data = data;\n          _context27.next = 16;\n          break;\n        case 12:\n          _context27.prev = 12;\n          _context27.t0 = _context27[\"catch\"](2);\n          _error = _context27.t0;\n          _data = null;\n        case 16:\n          _assert[\"default\"].equal(_data.name, CustomerDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 18:\n        case \"end\":\n          return _context27.stop();\n      }\n    }\n  }, _callee27, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "cabdfcc3-2092-4297-8e48-9513e2df8b1c",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.findById must return the added Product ",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage Product.findById must return the added Product ",
                  "timedOut": null,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee28() {\n  var _error, _data, _yield$Product$findBy, error, data;\n  return _regenerator[\"default\"].wrap(function _callee28$(_context28) {\n    while (1) {\n      switch (_context28.prev = _context28.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          _context28.prev = 2;\n          _context28.next = 5;\n          return Product.findById(NewProductDocument.__id);\n        case 5:\n          _yield$Product$findBy = _context28.sent;\n          error = _yield$Product$findBy.error;\n          data = _yield$Product$findBy.data;\n          _error = error;\n          _data = data;\n          _context28.next = 16;\n          break;\n        case 12:\n          _context28.prev = 12;\n          _context28.t0 = _context28[\"catch\"](2);\n          _error = _context28.t0;\n          _data = null;\n        case 16:\n          _assert[\"default\"].equal(_data.name, ProductDocument.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 18:\n        case \"end\":\n          return _context28.stop();\n      }\n    }\n  }, _callee28, null, [[2, 12]]);\n}))();",
                  "err": {},
                  "uuid": "b1f688b5-6a88-47fc-94fd-ea4a3dca69b2",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to edit the added Product",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to edit the added Product",
                  "timedOut": null,
                  "duration": 72,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee29() {\n  var _error, _data, doc, _yield$Product$edit3, error, data;\n  return _regenerator[\"default\"].wrap(function _callee29$(_context29) {\n    while (1) {\n      switch (_context29.prev = _context29.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context29.prev = 3;\n          doc = _objectSpread({}, NewProductDocument);\n          doc.name = 'XC60';\n          _context29.next = 8;\n          return Product.edit(NewProductDocument.__id, doc);\n        case 8:\n          _yield$Product$edit3 = _context29.sent;\n          error = _yield$Product$edit3.error;\n          data = _yield$Product$edit3.data;\n          _error = error;\n          _data = data;\n          _context29.next = 20;\n          break;\n        case 15:\n          _context29.prev = 15;\n          _context29.t0 = _context29[\"catch\"](3);\n          _error = _context29.t0;\n          _data = null;\n          doc = null;\n        case 20:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data.name, doc.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 23:\n        case \"end\":\n          return _context29.stop();\n      }\n    }\n  }, _callee29, null, [[3, 15]]);\n}))();",
                  "err": {},
                  "uuid": "5e5e61f9-42d9-4d62-8216-ff1d8f5cdfaa",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to edit the added Customer",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to edit the added Customer",
                  "timedOut": null,
                  "duration": 73,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee30() {\n  var _error, _data, doc, _yield$Customer$edit8, error, data;\n  return _regenerator[\"default\"].wrap(function _callee30$(_context30) {\n    while (1) {\n      switch (_context30.prev = _context30.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context30.prev = 3;\n          doc = _objectSpread({}, NewCustomerDocument);\n          doc.name = 'José Eduardo Almeida';\n          _context30.next = 8;\n          return Customer.edit(NewCustomerDocument.__id, doc);\n        case 8:\n          _yield$Customer$edit8 = _context30.sent;\n          error = _yield$Customer$edit8.error;\n          data = _yield$Customer$edit8.data;\n          _error = error;\n          _data = data;\n          _context30.next = 20;\n          break;\n        case 15:\n          _context30.prev = 15;\n          _context30.t0 = _context30[\"catch\"](3);\n          _error = _context30.t0;\n          _data = null;\n          doc = null;\n        case 20:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data.name, doc.name);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 23:\n        case \"end\":\n          return _context30.stop();\n      }\n    }\n  }, _callee30, null, [[3, 15]]);\n}))();",
                  "err": {},
                  "uuid": "9e031218-d6b5-4c36-977b-03dca7ed7d89",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to count Customer by name",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to count Customer by name",
                  "timedOut": null,
                  "duration": 56,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee31() {\n  var _error, _data, doc, _yield$Customer$count, error, data;\n  return _regenerator[\"default\"].wrap(function _callee31$(_context31) {\n    while (1) {\n      switch (_context31.prev = _context31.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context31.prev = 3;\n          _context31.next = 6;\n          return Customer.count({\n            name: 'José Eduardo Almeida'\n          });\n        case 6:\n          _yield$Customer$count = _context31.sent;\n          error = _yield$Customer$count.error;\n          data = _yield$Customer$count.data;\n          _error = error;\n          _data = data;\n          _context31.next = 18;\n          break;\n        case 13:\n          _context31.prev = 13;\n          _context31.t0 = _context31[\"catch\"](3);\n          _error = _context31.t0;\n          _data = null;\n          doc = null;\n        case 18:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data, 1);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 21:\n        case \"end\":\n          return _context31.stop();\n      }\n    }\n  }, _callee31, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "50d8d86a-7b2a-4f43-a1e9-1282e0cff803",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to count Product by name",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to count Product by name",
                  "timedOut": null,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee32() {\n  var _error, _data, doc, _yield$Product$count, error, data;\n  return _regenerator[\"default\"].wrap(function _callee32$(_context32) {\n    while (1) {\n      switch (_context32.prev = _context32.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context32.prev = 3;\n          _context32.next = 6;\n          return Product.count({\n            name: 'XC60'\n          });\n        case 6:\n          _yield$Product$count = _context32.sent;\n          error = _yield$Product$count.error;\n          data = _yield$Product$count.data;\n          _error = error;\n          _data = data;\n          _context32.next = 18;\n          break;\n        case 13:\n          _context32.prev = 13;\n          _context32.t0 = _context32[\"catch\"](3);\n          _error = _context32.t0;\n          _data = null;\n          doc = null;\n        case 18:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data, 1);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 21:\n        case \"end\":\n          return _context32.stop();\n      }\n    }\n  }, _callee32, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "b5bc3390-2011-4907-bf0b-c7e1a846f594",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to count Customer",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to count Customer",
                  "timedOut": null,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee33() {\n  var _error, _data, doc, _yield$Customer$count2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee33$(_context33) {\n    while (1) {\n      switch (_context33.prev = _context33.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context33.prev = 3;\n          _context33.next = 6;\n          return Customer.count();\n        case 6:\n          _yield$Customer$count2 = _context33.sent;\n          error = _yield$Customer$count2.error;\n          data = _yield$Customer$count2.data;\n          _error = error;\n          _data = data;\n          _context33.next = 18;\n          break;\n        case 13:\n          _context33.prev = 13;\n          _context33.t0 = _context33[\"catch\"](3);\n          _error = _context33.t0;\n          _data = null;\n          doc = null;\n        case 18:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data, 1);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 21:\n        case \"end\":\n          return _context33.stop();\n      }\n    }\n  }, _callee33, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "161b5e0e-9759-4f8a-931b-66d99c6bcec6",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to count Product",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to count Product",
                  "timedOut": null,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee34() {\n  var _error, _data, doc, _yield$Product$count2, error, data;\n  return _regenerator[\"default\"].wrap(function _callee34$(_context34) {\n    while (1) {\n      switch (_context34.prev = _context34.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context34.prev = 3;\n          _context34.next = 6;\n          return Product.count();\n        case 6:\n          _yield$Product$count2 = _context34.sent;\n          error = _yield$Product$count2.error;\n          data = _yield$Product$count2.data;\n          _error = error;\n          _data = data;\n          _context34.next = 18;\n          break;\n        case 13:\n          _context34.prev = 13;\n          _context34.t0 = _context34[\"catch\"](3);\n          _error = _context34.t0;\n          _data = null;\n          doc = null;\n        case 18:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data, 1);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 21:\n        case \"end\":\n          return _context34.stop();\n      }\n    }\n  }, _callee34, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "6e1dbd33-60a5-4f66-86b0-47fec4044372",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to delete the added Product",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to delete the added Product",
                  "timedOut": null,
                  "duration": 48,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee35() {\n  var _error, _data, doc, _yield$Product$delete, error, data;\n  return _regenerator[\"default\"].wrap(function _callee35$(_context35) {\n    while (1) {\n      switch (_context35.prev = _context35.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context35.prev = 3;\n          _context35.next = 6;\n          return Product[\"delete\"](NewProductDocument.__id);\n        case 6:\n          _yield$Product$delete = _context35.sent;\n          error = _yield$Product$delete.error;\n          data = _yield$Product$delete.data;\n          _error = error;\n          _data = data;\n          _context35.next = 18;\n          break;\n        case 13:\n          _context35.prev = 13;\n          _context35.t0 = _context35[\"catch\"](3);\n          _error = _context35.t0;\n          _data = null;\n          doc = null;\n        case 18:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data.__id, NewProductDocument.__id);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 21:\n        case \"end\":\n          return _context35.stop();\n      }\n    }\n  }, _callee35, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "7bc81da5-36f3-4111-abf1-0a3aaa8da4f7",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "We must be able to delete the added Customer",
                  "fullTitle": "#--- DataEntity Class Test Suite Check class usage We must be able to delete the added Customer",
                  "timedOut": null,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee36() {\n  var _error, _data, doc, _yield$Customer$delet, error, data;\n  return _regenerator[\"default\"].wrap(function _callee36$(_context36) {\n    while (1) {\n      switch (_context36.prev = _context36.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          doc = null;\n          _context36.prev = 3;\n          _context36.next = 6;\n          return Customer[\"delete\"](NewCustomerDocument.__id);\n        case 6:\n          _yield$Customer$delet = _context36.sent;\n          error = _yield$Customer$delet.error;\n          data = _yield$Customer$delet.data;\n          _error = error;\n          _data = data;\n          _context36.next = 18;\n          break;\n        case 13:\n          _context36.prev = 13;\n          _context36.t0 = _context36[\"catch\"](3);\n          _error = _context36.t0;\n          _data = null;\n          doc = null;\n        case 18:\n          _assert[\"default\"].equal(_error, null);\n          _assert[\"default\"].equal(_data.__id, NewCustomerDocument.__id);\n          if (_error) {\n            done(_error);\n          } else {\n            done();\n          }\n        case 21:\n        case \"end\":\n          return _context36.stop();\n      }\n    }\n  }, _callee36, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "c9dcfdde-7b64-4472-89bf-d8a9ae29c90b",
                  "parentUUID": "adf2051c-30b7-4244-99df-fb632ec5988c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9badfa4f-4987-4fcf-b614-af8b3e9980ac",
                "6f92cee0-3013-4bb7-82a6-426ddab9aa04",
                "dc3661fc-ddff-4190-afcc-c29c37b1fdb3",
                "790796db-1d09-4baf-a896-4f3604d5ddf7",
                "682b1f6a-a212-449f-afd0-20f3cb49b25a",
                "4b5da7a2-336d-41d7-92d7-dabf5487eec8",
                "44d54c6d-51c7-4d29-a44c-938df37b18bd",
                "64fac0eb-ed60-4cc7-8fb7-6d6f033f28c2",
                "f988b6da-787b-427f-a7cc-36c7faaf28f1",
                "3f0effeb-e96d-4103-b98e-732be4e02fbe",
                "817a5d27-7ff5-4504-8123-11d5dbc32acc",
                "0ef2f909-c146-4f44-a606-32dabf4d18ac",
                "b1667d31-f9bc-4bd8-b06f-26addd4651e8",
                "02423fb6-f7d2-4c0d-bde6-e3625b831533",
                "cabdfcc3-2092-4297-8e48-9513e2df8b1c",
                "b1f688b5-6a88-47fc-94fd-ea4a3dca69b2",
                "5e5e61f9-42d9-4d62-8216-ff1d8f5cdfaa",
                "9e031218-d6b5-4c36-977b-03dca7ed7d89",
                "50d8d86a-7b2a-4f43-a1e9-1282e0cff803",
                "b5bc3390-2011-4907-bf0b-c7e1a846f594",
                "161b5e0e-9759-4f8a-931b-66d99c6bcec6",
                "6e1dbd33-60a5-4f66-86b0-47fec4044372",
                "7bc81da5-36f3-4111-abf1-0a3aaa8da4f7",
                "c9dcfdde-7b64-4472-89bf-d8a9ae29c90b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 921,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7db79666-33eb-482f-aca4-38d930c9bca4",
              "title": "Check data event changes",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Product.add() must triggers add event",
                  "fullTitle": "#--- DataEntity Class Test Suite Check data event changes Product.add() must triggers add event",
                  "timedOut": null,
                  "duration": 35,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee37() {\n  var _error, _data, listener, _yield$Product$add4, error, data;\n  return _regenerator[\"default\"].wrap(function _callee37$(_context37) {\n    while (1) {\n      switch (_context37.prev = _context37.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          listener = Product.on('add', function (eventObj) {\n            var error = eventObj.error,\n                document = eventObj.document,\n                foundation = eventObj.foundation,\n                data = eventObj.data;\n            _assert[\"default\"].equal(_error, null);\n            _assert[\"default\"].equal(error, null);\n            _assert[\"default\"].equal(data.name, ProductDocument.name);\n            Product.stopListenTo(listener);\n            if (_error) {\n              done(_error);\n            } else {\n              NewProductDocument = _data;\n              done();\n            }\n          });\n          _context37.prev = 3;\n          _context37.next = 6;\n          return Product.add(ProductDocument);\n        case 6:\n          _yield$Product$add4 = _context37.sent;\n          error = _yield$Product$add4.error;\n          data = _yield$Product$add4.data;\n          _error = error;\n          _data = data;\n          _context37.next = 17;\n          break;\n        case 13:\n          _context37.prev = 13;\n          _context37.t0 = _context37[\"catch\"](3);\n          _error = _context37.t0;\n          _data = null;\n        case 17:\n        case \"end\":\n          return _context37.stop();\n      }\n    }\n  }, _callee37, null, [[3, 13]]);\n}))();",
                  "err": {},
                  "uuid": "6f95f26a-50f5-47e2-be19-3991d9ccac07",
                  "parentUUID": "7db79666-33eb-482f-aca4-38d930c9bca4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Product.edit() must triggers edit event",
                  "fullTitle": "#--- DataEntity Class Test Suite Check data event changes Product.edit() must triggers edit event",
                  "timedOut": null,
                  "duration": 95,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": ";\n(0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee39() {\n  var _error, _data, listener, add, _yield$Product$edit4, error, data;\n  return _regenerator[\"default\"].wrap(function _callee39$(_context39) {\n    while (1) {\n      switch (_context39.prev = _context39.next) {\n        case 0:\n          _error = null;\n          _data = null;\n          listener = Product.on('edit', function () {\n            var _ref39 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee38(eventObj) {\n              var error, document, foundation, data;\n              return _regenerator[\"default\"].wrap(function _callee38$(_context38) {\n                while (1) {\n                  switch (_context38.prev = _context38.next) {\n                    case 0:\n                      error = eventObj.error, document = eventObj.document, foundation = eventObj.foundation, data = eventObj.data;\n                      _assert[\"default\"].equal(_error, null);\n                      _assert[\"default\"].equal(error, null);\n                      _assert[\"default\"].equal(data.name, 'XC90 T6');\n                      Product.stopListenTo(listener);\n                      _context38.next = 7;\n                      return Product[\"delete\"](data.__id);\n                    case 7:\n                      if (_error) {\n                        done(_error);\n                      } else {\n                        NewProductDocument = _data;\n                        done();\n                      }\n                    case 8:\n                    case \"end\":\n                      return _context38.stop();\n                  }\n                }\n              }, _callee38);\n            }));\n            return function (_x) {\n              return _ref39.apply(this, arguments);\n            };\n          }());\n          _context39.prev = 3;\n          _context39.next = 6;\n          return Product.add(ProductDocument);\n        case 6:\n          add = _context39.sent;\n          add.data.name = 'XC90 T6';\n          _context39.next = 10;\n          return Product.edit(add.data.__id, add.data);\n        case 10:\n          _yield$Product$edit4 = _context39.sent;\n          error = _yield$Product$edit4.error;\n          data = _yield$Product$edit4.data;\n          _error = error;\n          _data = data;\n          _context39.next = 21;\n          break;\n        case 17:\n          _context39.prev = 17;\n          _context39.t0 = _context39[\"catch\"](3);\n          _error = _context39.t0;\n          _data = null;\n        case 21:\n        case \"end\":\n          return _context39.stop();\n      }\n    }\n  }, _callee39, null, [[3, 17]]);\n}))();",
                  "err": {},
                  "uuid": "66b2eecf-1c98-48c9-adb4-d9943d445aaa",
                  "parentUUID": "7db79666-33eb-482f-aca4-38d930c9bca4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6f95f26a-50f5-47e2-be19-3991d9ccac07",
                "66b2eecf-1c98-48c9-adb4-d9943d445aaa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 130,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "c4b21da0-e904-4775-abc9-36df9d4e60b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 122,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "docs/reports/unit-testing",
        "overwrite": false,
        "reportTitle": "My Custom Title",
        "showPassed": true,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}