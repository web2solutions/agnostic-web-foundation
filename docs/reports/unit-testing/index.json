{
  "stats": {
    "suites": 6,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2021-02-13T01:07:46.619Z",
    "end": "2021-02-13T01:07:46.992Z",
    "duration": 373,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "45a0583f-821e-4685-a301-7ed6897c2fae",
      "title": "",
      "fullFile": "cypress/integration/utils_spec.js",
      "file": "cypress/integration/utils_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5b8c1c94-88ed-49bf-b6a0-e02c5a91af7d",
          "title": "#--- Utils module Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b63f6a21-9383-40b1-8b77-3d3a1a795a2c",
              "title": "Method Signatures: utils.createMethodSignature(error: string|object, data: string|object|array|boolean) -> Create default signature method object",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "method signatures should have at least 2 data properties",
                  "fullTitle": "#--- Utils module Test Suite Method Signatures: utils.createMethodSignature(error: string|object, data: string|object|array|boolean) -> Create default signature method object method signatures should have at least 2 data properties",
                  "timedOut": null,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _error = 'fake error';\nvar _data = 'fake data';\nvar signature = utils.createMethodSignature(_error, _data);\n_assert[\"default\"].equal(Object.keys(signature).length, 2);\ndone();",
                  "err": {},
                  "uuid": "fa039b44-f4cd-4f3f-af5e-c826cde5a145",
                  "parentUUID": "b63f6a21-9383-40b1-8b77-3d3a1a795a2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "method signatures should have error and data properties",
                  "fullTitle": "#--- Utils module Test Suite Method Signatures: utils.createMethodSignature(error: string|object, data: string|object|array|boolean) -> Create default signature method object method signatures should have error and data properties",
                  "timedOut": null,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _error = 'fake error';\nvar _data = 'fake data';\nvar signature = utils.createMethodSignature(_error, _data);\n_assert[\"default\"].equal(signature.data, _data);\n_assert[\"default\"].equal(signature.error, _error);\ndone();",
                  "err": {},
                  "uuid": "4709129a-9440-42ef-a2a9-9a4554e09e35",
                  "parentUUID": "b63f6a21-9383-40b1-8b77-3d3a1a795a2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "method signatures should have error and data properties even if you dont pass any parameter",
                  "fullTitle": "#--- Utils module Test Suite Method Signatures: utils.createMethodSignature(error: string|object, data: string|object|array|boolean) -> Create default signature method object method signatures should have error and data properties even if you dont pass any parameter",
                  "timedOut": null,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var signature = utils.createMethodSignature();\n_assert[\"default\"].equal(signature.data, null);\n_assert[\"default\"].equal(signature.error, null);\ndone();",
                  "err": {},
                  "uuid": "a764e6e9-be86-4710-a64e-7765ffe206a4",
                  "parentUUID": "b63f6a21-9383-40b1-8b77-3d3a1a795a2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fa039b44-f4cd-4f3f-af5e-c826cde5a145",
                "4709129a-9440-42ef-a2a9-9a4554e09e35",
                "a764e6e9-be86-4710-a64e-7765ffe206a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 61,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "04d8b705-9b5f-4107-afbd-28ee2a5d8bd6",
              "title": "UUID: utils.uuid() -> Generate an Universally unique identifier string",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "uuid() must have 36 length",
                  "fullTitle": "#--- Utils module Test Suite UUID: utils.uuid() -> Generate an Universally unique identifier string uuid() must have 36 length",
                  "timedOut": null,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var uuid1 = utils.uuid();\nvar uuid2 = utils.uuid();\n_assert[\"default\"].equal(uuid1.length, 36);\n_assert[\"default\"].equal(uuid2.length, 36);\ndone();",
                  "err": {},
                  "uuid": "93205cd2-c784-4ce3-beb8-3f9554d609ec",
                  "parentUUID": "04d8b705-9b5f-4107-afbd-28ee2a5d8bd6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uuid() getter must return a 36 bytes string",
                  "fullTitle": "#--- Utils module Test Suite UUID: utils.uuid() -> Generate an Universally unique identifier string uuid() getter must return a 36 bytes string",
                  "timedOut": null,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var uuid1 = utils.uuid();\nvar bytes = new Blob([uuid1]).size;\n_assert[\"default\"].equal(bytes, 36);\ndone();",
                  "err": {},
                  "uuid": "7e28121f-a903-43b6-b401-080d0daed027",
                  "parentUUID": "04d8b705-9b5f-4107-afbd-28ee2a5d8bd6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Generates 10,000 uuids and check collisions",
                  "fullTitle": "#--- Utils module Test Suite UUID: utils.uuid() -> Generate an Universally unique identifier string Generates 10,000 uuids and check collisions",
                  "timedOut": null,
                  "duration": 56,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var arr = [];\nfor (var x = 0; x <= 10000; x++) {\n  var uuid = utils.uuid();\n  arr.push(uuid);\n}\nvar map = arr.reduce(function (acc, e) {\n  return acc.set(e, (acc.get(e) || 0) + 1);\n}, new Map());\nvar oneOcurrency = 1;\nvar similars = (0, _toConsumableArray2[\"default\"])(map.values()).filter(function (value) {\n  return value > oneOcurrency;\n}).length;\n_assert[\"default\"].equal(similars, 0);\ndone();",
                  "err": {},
                  "uuid": "e872e7b5-a0ba-43fc-9d6f-d7bf21e3b589",
                  "parentUUID": "04d8b705-9b5f-4107-afbd-28ee2a5d8bd6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93205cd2-c784-4ce3-beb8-3f9554d609ec",
                "7e28121f-a903-43b6-b401-080d0daed027",
                "e872e7b5-a0ba-43fc-9d6f-d7bf21e3b589"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 77,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a239f043-b817-41dd-a010-480cfe0faa1e",
              "title": "toJSON: utils.toJSON(string|object) -> stringify and parse an object",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "toJSON() must support Strings",
                  "fullTitle": "#--- Utils module Test Suite toJSON: utils.toJSON(string|object) -> stringify and parse an object toJSON() must support Strings",
                  "timedOut": null,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var obj = '{ \"name\": \"eduardo\" }';\nvar json = utils.toJSON(obj);\n_assert[\"default\"].equal(json.name, 'eduardo');\ndone();",
                  "err": {},
                  "uuid": "a1a832c4-db27-4d34-bd65-89f3f79ad95a",
                  "parentUUID": "a239f043-b817-41dd-a010-480cfe0faa1e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "toJSON() Strings must be valid JSON string",
                  "fullTitle": "#--- Utils module Test Suite toJSON: utils.toJSON(string|object) -> stringify and parse an object toJSON() Strings must be valid JSON string",
                  "timedOut": null,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var obj = '{ name: \"eduardo\" }';\nvar json = {};\ntry {\n  json = utils.toJSON(obj);\n} catch (error) {\n  json = {};\n}\n_assert[\"default\"].notEqual(json.name, 'eduardo');\ndone();",
                  "err": {},
                  "uuid": "d9f125af-4e7c-4371-b68d-ad5b51c43339",
                  "parentUUID": "a239f043-b817-41dd-a010-480cfe0faa1e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "toJSON() must support Object",
                  "fullTitle": "#--- Utils module Test Suite toJSON: utils.toJSON(string|object) -> stringify and parse an object toJSON() must support Object",
                  "timedOut": null,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var obj = {\n  name: 'eduardo'\n};\nvar json = utils.toJSON(obj);\n_assert[\"default\"].equal(json.name, 'eduardo');\ndone();",
                  "err": {},
                  "uuid": "7baae41c-2a58-435a-a242-1bf0819e6f2a",
                  "parentUUID": "a239f043-b817-41dd-a010-480cfe0faa1e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1a832c4-db27-4d34-bd65-89f3f79ad95a",
                "d9f125af-4e7c-4371-b68d-ad5b51c43339",
                "7baae41c-2a58-435a-a242-1bf0819e6f2a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 31,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1bc8cb6b-c587-4f3a-9734-754e5433514d",
              "title": "Mongoose 2 Dexie: utils.mongooseToDexieTableString(schema) -> Mongoose schema conversion to Dexie table config",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Table config must have __id as Primary Key",
                  "fullTitle": "#--- Utils module Test Suite Mongoose 2 Dexie: utils.mongooseToDexieTableString(schema) -> Mongoose schema conversion to Dexie table config Table config must have __id as Primary Key",
                  "timedOut": null,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var schema = new utils.Schema({\n  name: {\n    type: String,\n    required: true,\n    index: true\n  },\n  username: {\n    type: String,\n    required: true,\n    index: true\n  }\n});\nvar tableConfig = utils.mongooseToDexieTableString(schema);\nvar tableConfigArray = tableConfig.split(',');\n_assert[\"default\"].equal(tableConfigArray[0], '++__id');\ndone();",
                  "err": {},
                  "uuid": "70788333-e586-48b0-b2f5-8b4556055c8e",
                  "parentUUID": "1bc8cb6b-c587-4f3a-9734-754e5433514d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70788333-e586-48b0-b2f5-8b4556055c8e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3dc68172-057f-4f61-9aaa-ffd143f0c6d8",
              "title": "lunr search token generating",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Returned token must be an array",
                  "fullTitle": "#--- Utils module Test Suite lunr search token generating Returned token must be an array",
                  "timedOut": null,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _error = null;\nvar _data = null;\ntry {\n  var text = 'text goes here';\n  var token = utils.getSearchTokenStream(text);\n  _data = token;\n} catch (e) {\n  console.log(e);\n  _error = e;\n  _data = null;\n}\n_assert[\"default\"].equal(Array.isArray(_data), true);\ndone();",
                  "err": {},
                  "uuid": "6377feab-99b7-4321-b312-645284b1b745",
                  "parentUUID": "3dc68172-057f-4f61-9aaa-ffd143f0c6d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Returned token must have 3 entries",
                  "fullTitle": "#--- Utils module Test Suite lunr search token generating Returned token must have 3 entries",
                  "timedOut": null,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _error = null;\nvar _data = null;\ntry {\n  var text = 'text goes here';\n  var token = utils.getSearchTokenStream(text);\n  _data = token;\n} catch (e) {\n  console.log(e);\n  _error = e;\n  _data = null;\n}\n_assert[\"default\"].equal(_data.length, 3);\ndone();",
                  "err": {},
                  "uuid": "d50be66e-8390-44de-ac59-b8d16949654a",
                  "parentUUID": "3dc68172-057f-4f61-9aaa-ffd143f0c6d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Returned token must have 0 entries",
                  "fullTitle": "#--- Utils module Test Suite lunr search token generating Returned token must have 0 entries",
                  "timedOut": null,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _error = null;\nvar _data = null;\ntry {\n  var text = '';\n  var token = utils.getSearchTokenStream(text);\n  _data = token;\n} catch (e) {\n  console.log(e);\n  _error = e;\n  _data = null;\n}\n_assert[\"default\"].equal(_data.length, 0);\ndone();",
                  "err": {},
                  "uuid": "44d48c7a-48bf-4940-b813-8081e75b9b1e",
                  "parentUUID": "3dc68172-057f-4f61-9aaa-ffd143f0c6d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6377feab-99b7-4321-b312-645284b1b745",
                "d50be66e-8390-44de-ac59-b8d16949654a",
                "44d48c7a-48bf-4940-b813-8081e75b9b1e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 40,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index.html",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "docs/reports/unit-testing",
        "overwrite": true,
        "reportTitle": "My Custom Title",
        "showPassed": true,
        "html": true,
        "json": true,
        "charts": true,
        "reportFilename": "index.html"
      },
      "version": "5.1.0"
    }
  }
}